import { openBlock as D, createElementBlock as z, createElementVNode as ce, unref as u, reactive as Vt, computed as j, ref as ee, toRef as xt, watch as ct, h as Oa, render as Un, defineComponent as Ie, renderSlot as ue, createCommentVNode as q, normalizeClass as we, withKeys as ve, createBlock as ke, withModifiers as Me, onMounted as We, onUnmounted as tn, normalizeProps as _e, mergeProps as Ye, Fragment as he, normalizeStyle as qe, createTextVNode as ot, toDisplayString as Ne, onBeforeUpdate as Ba, nextTick as ft, renderList as Te, withDirectives as Xt, vShow as Jt, withCtx as pe, createVNode as He, Transition as Ct, createSlots as Le, useSlots as Dt, guardReactiveProps as Fe, resolveDynamicComponent as Rn, getCurrentScope as Ya, onScopeDispose as Ia, isRef as Kn, Teleport as Na } from "vue";
import { format as tt, isEqual as Tt, setHours as la, setMinutes as ra, setSeconds as Cn, setMilliseconds as _n, isAfter as Et, getYear as me, getMonth as ge, setMonth as Ea, setYear as et, addMonths as bt, subMonths as Ft, isValid as Zt, isBefore as Lt, set as $e, eachDayOfInterval as oa, getHours as Xe, getMinutes as nt, getSeconds as St, startOfWeek as sa, endOfWeek as Fa, parse as Tn, isDate as La, addYears as ua, subYears as ia, addDays as ht, getDay as Wa, differenceInCalendarDays as Va, add as da, sub as Ha, getWeek as za, getISOWeek as Ua, isSameQuarter as jn, eachQuarterOfInterval as Ka, startOfYear as ja, endOfYear as Ga, startOfQuarter as Qa, endOfQuarter as Gn, getQuarter as Qn } from "date-fns";
function _t() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      ce("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ce("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      ce("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
_t.compatConfig = {
  MODE: 3
};
function ca() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      ce("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
ca.compatConfig = {
  MODE: 3
};
function On() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
On.compatConfig = {
  MODE: 3
};
function Bn() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
Bn.compatConfig = {
  MODE: 3
};
function Yn() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      ce("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
Yn.compatConfig = {
  MODE: 3
};
function In() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
In.compatConfig = {
  MODE: 3
};
function Nn() {
  return D(), z(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      ce("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
Nn.compatConfig = {
  MODE: 3
};
function qn(e) {
  return (t) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`)).slice(0, 2);
}
function qa(e) {
  return (t) => tt(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`), "EEEEEE", { locale: e });
}
const Xa = (e, t, r) => {
  const a = [1, 2, 3, 4, 5, 6, 7];
  let n;
  if (e !== null)
    try {
      n = a.map(qa(e));
    } catch {
      n = a.map(qn(t));
    }
  else
    n = a.map(qn(t));
  const i = n.slice(0, r), o = n.slice(r + 1, n.length);
  return [n[r]].concat(...o).concat(...i);
}, En = (e, t) => {
  const r = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    r.push({ value: +a, text: `${a}` });
  return t ? r.reverse() : r;
}, fa = (e, t, r) => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((i) => {
    const o = i < 10 ? `0${i}` : i;
    return /* @__PURE__ */ new Date(`2017-${o}-01T00:00:00+00:00`);
  });
  if (e !== null)
    try {
      const i = r === "long" ? "MMMM" : "MMM";
      return a.map((o, v) => {
        const b = tt(o, i, { locale: e });
        return {
          text: b.charAt(0).toUpperCase() + b.substring(1),
          value: v
        };
      });
    } catch {
    }
  const n = new Intl.DateTimeFormat(t, { month: r, timeZone: "UTC" });
  return a.map((i, o) => {
    const v = n.format(i);
    return {
      text: v.charAt(0).toUpperCase() + v.substring(1),
      value: o
    };
  });
}, Ja = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Oe = (e) => {
  const t = u(e);
  return t != null && t.$el ? t == null ? void 0 : t.$el : t;
}, Za = (e) => Object.assign({ type: "dot" }, e), va = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, Fn = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Ce = (e) => e, Xn = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, Jn = (e) => e === null, ma = (e) => {
  if (e)
    return [...e.querySelectorAll("input, button, select, textarea, a[href]")][0];
}, xa = (e) => {
  const t = [], r = (a) => a.filter((n) => n);
  for (let a = 0; a < e.length; a += 3) {
    const n = [e[a], e[a + 1], e[a + 2]];
    t.push(r(n));
  }
  return t;
}, Wt = (e, t, r) => {
  const a = r != null, n = t != null;
  if (!a && !n)
    return !1;
  const i = +r, o = +t;
  return a && n ? +e > i || +e < o : a ? +e > i : n ? +e < o : !1;
}, Pt = (e, t) => xa(e).map((r) => r.map((a) => {
  const { active: n, disabled: i, isBetween: o, highlighted: v } = t(a);
  return {
    ...a,
    active: n,
    disabled: i,
    className: {
      dp__overlay_cell_active: n,
      dp__overlay_cell: !n,
      dp__overlay_cell_disabled: i,
      dp__overlay_cell_pad: !0,
      dp__overlay_cell_active_disabled: i && n,
      dp__cell_in_between: o,
      "dp--highlighted": v
    }
  };
})), it = (e, t, r = !1) => {
  e && t.allowStopPropagation && (r && e.stopImmediatePropagation(), e.stopPropagation());
}, el = () => [
  "a[href]",
  "area[href]",
  "input:not([disabled]):not([type='hidden'])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "[tabindex]:not([tabindex='-1'])",
  "[data-datepicker-instance]"
].join(", ");
function tl(e, t) {
  let r = [...document.querySelectorAll(el())];
  r = r.filter((n) => !e.contains(n) || n.hasAttribute("data-datepicker-instance"));
  const a = r.indexOf(e);
  if (a >= 0 && (t ? a - 1 >= 0 : a + 1 <= r.length))
    return r[a + (t ? -1 : 1)];
}
const nl = (e, t) => e == null ? void 0 : e.querySelector(`[data-dp-element="${t}"]`), Ln = (e) => tt(e, "dd-MM-yyyy"), pn = (e) => Array.isArray(e), en = (e, t) => t.get(Ln(e)), al = (e, t) => e ? t ? t instanceof Map ? !!en(e, t) : t(N(e)) : !1 : !0, Zn = (e, t, r, a, n) => {
  const i = Tn(e, t.slice(0, e.length), /* @__PURE__ */ new Date());
  return Zt(i) && La(i) ? a || n ? i : $e(i, {
    hours: +r.hours,
    minutes: +(r == null ? void 0 : r.minutes),
    seconds: +(r == null ? void 0 : r.seconds),
    milliseconds: 0
  }) : null;
}, ll = (e, t, r, a, n) => {
  const i = Array.isArray(r) ? r[0] : r;
  if (typeof t == "string")
    return Zn(e, t, i, a, n);
  if (Array.isArray(t)) {
    let o = null;
    for (const v of t)
      if (o = Zn(e, v, i, a, n), o)
        break;
    return o;
  }
  return typeof t == "function" ? t(e) : null;
}, N = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), rl = (e, t, r) => {
  if (t) {
    const n = (e.getMonth() + 1).toString().padStart(2, "0"), i = e.getDate().toString().padStart(2, "0"), o = e.getHours().toString().padStart(2, "0"), v = e.getMinutes().toString().padStart(2, "0"), b = r ? e.getSeconds().toString().padStart(2, "0") : "00";
    return `${e.getFullYear()}-${n}-${i}T${o}:${v}:${b}.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, Ue = (e) => {
  let t = N(JSON.parse(JSON.stringify(e)));
  return t = la(t, 0), t = ra(t, 0), t = Cn(t, 0), t = _n(t, 0), t;
}, dt = (e, t, r, a) => {
  let n = e ? N(e) : N();
  return (t || t === 0) && (n = la(n, +t)), (r || r === 0) && (n = ra(n, +r)), (a || a === 0) && (n = Cn(n, +a)), _n(n, 0);
}, Pe = (e, t) => !e || !t ? !1 : Lt(Ue(e), Ue(t)), be = (e, t) => !e || !t ? !1 : Tt(Ue(e), Ue(t)), Re = (e, t) => !e || !t ? !1 : Et(Ue(e), Ue(t)), nn = (e, t, r) => e != null && e[0] && (e != null && e[1]) ? Re(r, e[0]) && Pe(r, e[1]) : e != null && e[0] && t ? Re(r, e[0]) && Pe(r, t) || Pe(r, e[0]) && Re(r, t) : !1, Qe = (e) => {
  const t = $e(new Date(e), { date: 1 });
  return Ue(t);
}, yn = (e, t, r) => t && (r || r === 0) ? Object.fromEntries(
  ["hours", "minutes", "seconds"].map((a) => a === t ? [a, r] : [a, isNaN(+e[a]) ? void 0 : +e[a]])
) : {
  hours: isNaN(+e.hours) ? void 0 : +e.hours,
  minutes: isNaN(+e.minutes) ? void 0 : +e.minutes,
  seconds: isNaN(+e.seconds) ? void 0 : +e.seconds
}, kt = (e) => ({
  hours: Xe(e),
  minutes: nt(e),
  seconds: St(e)
}), pa = (e, t) => {
  if (t) {
    const r = me(N(t));
    if (r > e)
      return 12;
    if (r === e)
      return ge(N(t));
  }
}, ya = (e, t) => {
  if (t) {
    const r = me(N(t));
    return r < e ? -1 : r === e ? ge(N(t)) : void 0;
  }
}, Rt = (e) => {
  if (e)
    return me(N(e));
}, ga = (e, t) => {
  const r = Re(e, t) ? t : e, a = Re(t, e) ? t : e;
  return oa({ start: r, end: a });
}, ol = (e) => {
  const t = bt(e, 1);
  return { month: ge(t), year: me(t) };
}, lt = (e, t) => {
  const r = sa(e, { weekStartsOn: +t }), a = Fa(e, { weekStartsOn: +t });
  return [r, a];
}, ha = (e, t) => {
  const r = {
    hours: Xe(N()),
    minutes: nt(N()),
    seconds: t ? St(N()) : 0
  };
  return Object.assign(r, e);
}, ut = (e, t, r) => [$e(N(e), { date: 1 }), $e(N(), { month: t, year: r, date: 1 })], rt = (e, t, r) => {
  let a = e ? N(e) : N();
  return (t || t === 0) && (a = Ea(a, t)), r && (a = et(a, r)), a;
}, ba = (e, t, r, a, n) => {
  if (!a || n && !t || !n && !r)
    return !1;
  const i = n ? bt(e, 1) : Ft(e, 1), o = [ge(i), me(i)];
  return n ? !ul(...o, t) : !sl(...o, r);
}, sl = (e, t, r) => Pe(...ut(r, e, t)) || be(...ut(r, e, t)), ul = (e, t, r) => Re(...ut(r, e, t)) || be(...ut(r, e, t)), ka = (e, t, r, a, n, i, o) => {
  if (typeof t == "function" && !o)
    return t(e);
  const v = r ? { locale: r } : void 0;
  return Array.isArray(e) ? `${tt(e[0], i, v)}${n && !e[1] ? "" : a}${e[1] ? tt(e[1], i, v) : ""}` : tt(e, i, v);
}, $t = (e) => {
  if (e)
    return null;
  throw new Error(Fn.prop("partial-range"));
}, Qt = (e, t) => {
  if (t)
    return e();
  throw new Error(Fn.prop("range"));
}, Sn = (e) => Array.isArray(e) ? Zt(e[0]) && (e[1] ? Zt(e[1]) : !0) : e ? Zt(e) : !1, il = (e, t) => $e(t ?? N(), {
  hours: +e.hours || 0,
  minutes: +e.minutes || 0,
  seconds: +e.seconds || 0
}), gn = (e, t, r, a) => {
  if (!e)
    return !0;
  if (a) {
    const n = r === "max" ? Lt(e, t) : Et(e, t), i = { seconds: 0, milliseconds: 0 };
    return n || Tt($e(e, i), $e(t, i));
  }
  return r === "max" ? e.getTime() <= t.getTime() : e.getTime() >= t.getTime();
}, hn = (e, t, r) => e ? il(e, t) : N(r ?? t), xn = (e, t, r, a, n) => {
  if (Array.isArray(a)) {
    const o = hn(e, a[0], t), v = hn(e, a[1], t);
    return gn(a[0], o, r, !!t) && gn(a[1], v, r, !!t) && n;
  }
  const i = hn(e, a, t);
  return gn(a, i, r, !!t) && n;
}, bn = (e) => $e(N(), kt(e)), dl = (e, t) => e instanceof Map ? Array.from(e.values()).filter((r) => me(N(r)) === t).map((r) => ge(r)) : [], wa = (e, t, r) => typeof e == "function" ? e({ month: t, year: r }) : !!e.months.find((a) => a.month === t && a.year === r), Wn = (e, t) => typeof e == "function" ? e(t) : e.years.includes(t), It = Vt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Da = () => {
  const e = (a) => {
    It.menuFocused = a;
  }, t = (a) => {
    It.shiftKeyInMenu !== a && (It.shiftKeyInMenu = a);
  };
  return {
    control: j(() => ({ shiftKeyInMenu: It.shiftKeyInMenu, menuFocused: It.menuFocused })),
    setMenuFocused: e,
    setShiftKey: t
  };
}, Ae = Vt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), kn = ee(null), qt = ee(!1), wn = ee(!1), Dn = ee(!1), Mn = ee(!1), Ee = ee(0), Be = ee(0), mt = () => {
  const e = j(() => qt.value ? [...Ae.selectionGrid, Ae.actionRow].filter((R) => R.length) : wn.value ? [
    ...Ae.timePicker[0],
    ...Ae.timePicker[1],
    Mn.value ? [] : [kn.value],
    Ae.actionRow
  ].filter((R) => R.length) : Dn.value ? [...Ae.monthPicker, Ae.actionRow] : [Ae.monthYear, ...Ae.calendar, Ae.time, Ae.actionRow].filter((R) => R.length)), t = (R) => {
    Ee.value = R ? Ee.value + 1 : Ee.value - 1;
    let W = null;
    e.value[Be.value] && (W = e.value[Be.value][Ee.value]), W || (Ee.value = R ? Ee.value - 1 : Ee.value + 1);
  }, r = (R) => {
    if (Be.value === 0 && !R || Be.value === e.value.length && R)
      return;
    Be.value = R ? Be.value + 1 : Be.value - 1, e.value[Be.value] ? e.value[Be.value] && !e.value[Be.value][Ee.value] && Ee.value !== 0 && (Ee.value = e.value[Be.value].length - 1) : Be.value = R ? Be.value - 1 : Be.value + 1;
  }, a = (R) => {
    let W = null;
    e.value[Be.value] && (W = e.value[Be.value][Ee.value]), W ? W.focus({ preventScroll: !qt.value }) : Ee.value = R ? Ee.value - 1 : Ee.value + 1;
  }, n = () => {
    t(!0), a(!0);
  }, i = () => {
    t(!1), a(!1);
  }, o = () => {
    r(!1), a(!0);
  }, v = () => {
    r(!0), a(!0);
  }, b = (R, W) => {
    Ae[W] = R;
  }, O = (R, W) => {
    Ae[W] = R;
  }, g = () => {
    Ee.value = 0, Be.value = 0;
  };
  return {
    buildMatrix: b,
    buildMultiLevelMatrix: O,
    setTimePickerBackRef: (R) => {
      kn.value = R;
    },
    setSelectionGrid: (R) => {
      qt.value = R, g(), R || (Ae.selectionGrid = []);
    },
    setTimePicker: (R, W = !1) => {
      wn.value = R, Mn.value = W, g(), R || (Ae.timePicker[0] = [], Ae.timePicker[1] = []);
    },
    setTimePickerElements: (R, W = 0) => {
      Ae.timePicker[W] = R;
    },
    arrowRight: n,
    arrowLeft: i,
    arrowUp: o,
    arrowDown: v,
    clearArrowNav: () => {
      Ae.monthYear = [], Ae.calendar = [], Ae.time = [], Ae.actionRow = [], Ae.selectionGrid = [], Ae.timePicker[0] = [], Ae.timePicker[1] = [], qt.value = !1, wn.value = !1, Mn.value = !1, Dn.value = !1, g(), kn.value = null;
    },
    setMonthPicker: (R) => {
      Dn.value = R, g();
    },
    refSets: Ae
    // exposed for testing
  };
}, vt = (e, t) => t ? new Date(e.toLocaleString("en-US", { timeZone: t })) : new Date(e), Ma = (e, t) => {
  const r = Pn(e, t);
  return r || N();
}, cl = (e, t) => t.dateInTz ? vt(new Date(e), t.dateInTz) : N(e), Pn = (e, t) => {
  if (!e)
    return null;
  if (!t)
    return N(e);
  const r = N(e);
  return t.exactMatch ? cl(e, t) : vt(r, t.timezone);
}, ea = (e) => ({
  menuAppearTop: "dp-menu-appear-top",
  menuAppearBottom: "dp-menu-appear-bottom",
  open: "dp-slide-down",
  close: "dp-slide-up",
  next: "calendar-next",
  previous: "calendar-prev",
  vNext: "dp-slide-up",
  vPrevious: "dp-slide-down",
  ...e ?? {}
}), fl = (e) => ({
  toggleOverlay: "Toggle overlay",
  menu: "Datepicker menu",
  input: "Datepicker input",
  calendarWrap: "Calendar wrapper",
  calendarDays: "Calendar days",
  openTimePicker: "Open time picker",
  closeTimePicker: "Close time Picker",
  incrementValue: (t) => `Increment ${t}`,
  decrementValue: (t) => `Decrement ${t}`,
  openTpOverlay: (t) => `Open ${t} overlay`,
  amPmButton: "Switch AM/PM mode",
  openYearsOverlay: "Open years overlay",
  openMonthsOverlay: "Open months overlay",
  nextMonth: "Next month",
  prevMonth: "Previous month",
  nextYear: "Next year",
  prevYear: "Previous year",
  day: () => "",
  ...e ?? {}
}), ta = (e) => e ? typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2 : 0, vl = (e) => {
  const t = typeof e == "object" && e, r = {
    static: !0,
    solo: !1
  };
  if (!e)
    return { ...r, count: ta(!1) };
  const a = t ? e : {}, n = t ? a.count ?? !0 : e, i = ta(n);
  return Object.assign(r, a, { count: i });
}, ml = (e, t, r) => e || (typeof r == "string" ? r : t), pl = (e) => typeof e == "boolean" ? e ? ea({}) : !1 : ea(e), yl = (e) => {
  const t = {
    enterSubmit: !0,
    tabSubmit: !0,
    openMenu: !0,
    selectOnFocus: !1,
    rangeSeparator: " - "
  };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : { ...t, enabled: e };
}, gl = (e) => ({
  months: [],
  years: [],
  times: { hours: [], minutes: [], seconds: [] },
  ...e ?? {}
}), hl = (e) => ({
  showSelect: !0,
  showCancel: !0,
  showNow: !1,
  showPreview: !0,
  ...e ?? {}
}), bl = (e) => {
  const t = { input: !1 };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : {
    enabled: e,
    ...t
  };
}, kl = (e) => ({ ...{
  allowStopPropagation: !0,
  closeOnScroll: !1,
  modeHeight: 255,
  allowPreventDefault: !1,
  closeOnClearValue: !0,
  closeOnAutoApply: !0,
  noSwipe: !1,
  keepActionRow: !1,
  onClickOutside: void 0,
  tabOutClosesMenu: !0
}, ...e ?? {} }), wl = (e) => {
  const t = {
    dates: Array.isArray(e) ? e.map((r) => N(r)) : [],
    years: [],
    months: [],
    quarters: [],
    weeks: [],
    weekdays: [],
    options: { highlightDisabled: !1 }
  };
  return typeof e == "function" ? e : { ...t, ...e ?? {} };
}, Dl = (e) => typeof e == "object" ? {
  type: (e == null ? void 0 : e.type) ?? "local",
  hideOnOffsetDates: (e == null ? void 0 : e.hideOnOffsetDates) ?? !1
} : {
  type: e,
  hideOnOffsetDates: !1
}, Ml = (e, t) => {
  const r = {
    noDisabledRange: !1,
    showLastInRange: !0,
    minMaxRawRange: !1,
    partialRange: !0,
    disableTimeRangeValidation: !1,
    maxRange: void 0,
    minRange: void 0,
    autoRange: void 0,
    fixedStart: !1,
    fixedEnd: !1
  };
  return typeof e == "object" ? { enabled: !0, ...r, ...e } : {
    enabled: e,
    noDisabledRange: t.noDisabledRange,
    showLastInRange: t.showLastInRange,
    minMaxRawRange: t.minMaxRawRange,
    partialRange: t.partialRange,
    disableTimeRangeValidation: t.disableTimeRangeValidation,
    maxRange: t.maxRange,
    minRange: t.minRange,
    autoRange: t.autoRange,
    fixedStart: t.fixedStart,
    fixedEnd: t.fixedEnd
  };
}, $l = (e, t) => e ? typeof e == "string" ? { timezone: e, exactMatch: !1, dateInTz: void 0, emitTimezone: t } : {
  timezone: e.timezone,
  exactMatch: e.exactMatch ?? !1,
  dateInTz: e.dateInTz ?? void 0,
  emitTimezone: t ?? e.emitTimezone
} : { timezone: void 0, exactMatch: !1, emitTimezone: t }, $n = (e, t) => new Map(
  e.map((r) => {
    const a = Ma(r, t);
    return [Ln(a), a];
  })
), Al = (e, t) => e.length ? new Map(
  e.map((r) => {
    const a = Ma(r.date, t);
    return [Ln(a), r];
  })
) : null, Tl = (e, t, r, a, n, i, o) => ({
  minDate: Pn(e, o),
  maxDate: Pn(t, o),
  disabledDates: pn(r) ? $n(r, o) : r,
  allowedDates: pn(a) ? $n(a, o) : null,
  highlight: typeof n == "object" && pn(n == null ? void 0 : n.dates) ? $n(n.dates, o) : n,
  markers: Al(i, o)
}), Se = (e) => {
  const t = () => {
    const T = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${T}` : `hh:mm${T} aa`;
  }, r = () => {
    var T;
    return e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? t() : e.weekPicker ? `${((T = Q.value) == null ? void 0 : T.type) === "iso" ? "RR" : "ww"}-yyyy` : e.yearPicker ? "yyyy" : e.quarterPicker ? "QQQ/yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${t()}` : "MM/dd/yyyy";
  }, a = (T) => ha(T, e.enableSeconds), n = () => B.value.enabled ? e.startTime && Array.isArray(e.startTime) ? [a(e.startTime[0]), a(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? a(e.startTime) : null, i = j(() => vl(e.multiCalendars)), o = j(() => n()), v = j(() => fl(e.ariaLabels)), b = j(() => gl(e.filters)), O = j(() => pl(e.transitions)), g = j(() => hl(e.actionRow)), A = j(
    () => ml(e.previewFormat, e.format, r())
  ), I = j(() => yl(e.textInput)), _ = j(() => bl(e.inline)), V = j(() => kl(e.config)), p = j(() => wl(e.highlight)), Q = j(() => Dl(e.weekNumbers)), R = j(() => $l(e.timezone, e.emitTimezone)), W = j(
    () => Tl(
      e.minDate,
      e.maxDate,
      e.disabledDates,
      e.allowedDates,
      p.value,
      e.markers,
      R.value
    )
  ), B = j(
    () => Ml(e.range, {
      minMaxRawRange: !1,
      maxRange: e.maxRange,
      minRange: e.minRange,
      noDisabledRange: e.noDisabledRange,
      showLastInRange: e.showLastInRange,
      partialRange: e.partialRange,
      disableTimeRangeValidation: e.disableTimeRangeValidation,
      autoRange: e.autoRange,
      fixedStart: e.fixedStart,
      fixedEnd: e.fixedEnd
    })
  );
  return {
    defaultedTransitions: O,
    defaultedMultiCalendars: i,
    defaultedStartTime: o,
    defaultedAriaLabels: v,
    defaultedFilters: b,
    defaultedActionRow: g,
    defaultedPreviewFormat: A,
    defaultedTextInput: I,
    defaultedInline: _,
    defaultedConfig: V,
    defaultedHighlight: p,
    defaultedWeekNumbers: Q,
    defaultedRange: B,
    propDates: W,
    defaultedTz: R,
    getDefaultPattern: r,
    getDefaultStartTime: n
  };
}, Sl = (e, t, r) => {
  const a = ee(), { defaultedTextInput: n, defaultedRange: i, defaultedTz: o, getDefaultPattern: v } = Se(t), b = ee(""), O = xt(t, "format");
  ct(
    a,
    () => {
      e("internal-model-change", a.value);
    },
    { deep: !0 }
  ), ct(O, () => {
    P();
  });
  const g = (l, w, H = !1) => ka(
    l,
    t.format,
    t.formatLocale,
    n.value.rangeSeparator,
    t.modelAuto,
    w ?? v(),
    H
  ), A = (l) => l ? t.modelType ? d(l) : {
    hours: Xe(l),
    minutes: nt(l),
    seconds: t.enableSeconds ? St(l) : 0
  } : null, I = (l) => t.modelType ? d(l) : { month: ge(l), year: me(l) }, _ = (l) => Array.isArray(l) ? t.multiDates ? l.map((w) => V(w, et(N(), w))) : Qt(
    () => [
      et(N(), l[0]),
      l[1] ? et(N(), l[1]) : $t(i.value.partialRange)
    ],
    i.value.enabled
  ) : et(N(), +l), V = (l, w) => (typeof l == "string" || typeof l == "number") && t.modelType ? te(l) : w, p = (l) => Array.isArray(l) ? [
    V(
      l[0],
      dt(null, +l[0].hours, +l[0].minutes, l[0].seconds)
    ),
    V(
      l[1],
      dt(null, +l[1].hours, +l[1].minutes, l[1].seconds)
    )
  ] : V(l, dt(null, l.hours, l.minutes, l.seconds)), Q = (l) => {
    const w = $e(N(), { date: 1 });
    return Array.isArray(l) ? t.multiDates ? l.map((H) => V(H, rt(w, +H.month, +H.year))) : Qt(
      () => [
        V(l[0], rt(w, +l[0].month, +l[0].year)),
        V(
          l[1],
          l[1] ? rt(w, +l[1].month, +l[1].year) : $t(i.value.partialRange)
        )
      ],
      i.value.enabled
    ) : V(l, rt(w, +l.month, +l.year));
  }, R = (l) => {
    if (Array.isArray(l))
      return l.map((w) => te(w));
    throw new Error(Fn.dateArr("multi-dates"));
  }, W = (l) => {
    if (Array.isArray(l) && i.value.enabled) {
      const w = l[0], H = l[1];
      return [
        N(Array.isArray(w) ? w[0] : null),
        N(Array.isArray(H) ? H[0] : null)
      ];
    }
    return N(l[0]);
  }, B = (l) => t.modelAuto ? Array.isArray(l) ? [te(l[0]), te(l[1])] : t.autoApply ? [te(l)] : [te(l), null] : Array.isArray(l) ? Qt(
    () => l[1] ? [
      te(l[0]),
      l[1] ? te(l[1]) : $t(i.value.partialRange)
    ] : [te(l[0])],
    i.value.enabled
  ) : te(l), T = () => {
    Array.isArray(a.value) && i.value.enabled && a.value.length === 1 && a.value.push($t(i.value.partialRange));
  }, M = () => {
    const l = a.value;
    return [
      d(l[0]),
      l[1] ? d(l[1]) : $t(i.value.partialRange)
    ];
  }, G = () => a.value[1] ? M() : d(Ce(a.value[0])), ne = () => (a.value || []).map((l) => d(l)), $ = () => (T(), t.modelAuto ? G() : t.multiDates ? ne() : Array.isArray(a.value) ? Qt(() => M(), i.value.enabled) : d(Ce(a.value))), re = (l) => !l || Array.isArray(l) && !l.length ? null : t.timePicker ? p(Ce(l)) : t.monthPicker ? Q(Ce(l)) : t.yearPicker ? _(Ce(l)) : t.multiDates ? R(Ce(l)) : t.weekPicker ? W(Ce(l)) : B(Ce(l)), se = (l) => {
    const w = re(l);
    Sn(Ce(w)) ? (a.value = Ce(w), P()) : (a.value = null, b.value = "");
  }, k = () => {
    const l = (w) => tt(w, n.value.format);
    return `${l(a.value[0])} ${n.value.rangeSeparator} ${a.value[1] ? l(a.value[1]) : ""}`;
  }, L = () => r.value && a.value ? Array.isArray(a.value) ? k() : tt(a.value, n.value.format) : g(a.value), Y = () => a.value ? t.multiDates ? a.value.map((l) => g(l)).join("; ") : n.value.enabled && typeof n.value.format == "string" ? L() : g(a.value) : "", P = () => {
    !t.format || typeof t.format == "string" || n.value.enabled && typeof n.value.format == "string" ? b.value = Y() : b.value = t.format(a.value);
  }, te = (l) => {
    if (t.utc) {
      const w = new Date(l);
      return t.utc === "preserve" ? new Date(w.getTime() + w.getTimezoneOffset() * 6e4) : w;
    }
    return t.modelType ? t.modelType === "date" || t.modelType === "timestamp" ? new Date(l) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? Tn(l, v(), /* @__PURE__ */ new Date()) : Tn(l, t.modelType, /* @__PURE__ */ new Date()) : new Date(l);
  }, d = (l) => l ? t.utc ? rl(l, t.utc === "preserve", t.enableSeconds) : t.modelType ? t.modelType === "timestamp" ? +l : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? g(l) : g(l, t.modelType, !0) : l : "", c = (l, w = !1) => {
    if (e("update:model-value", l), o.value.emitTimezone && w) {
      const H = Array.isArray(l) ? l.map((s) => vt(Ce(s), o.value.emitTimezone)) : vt(Ce(l), o.value.emitTimezone);
      e("update:model-timezone-value", H);
    }
  }, X = (l) => Array.isArray(a.value) ? t.multiDates ? a.value.map((w) => l(w)) : [
    l(a.value[0]),
    a.value[1] ? l(a.value[1]) : $t(i.value.partialRange)
  ] : l(Ce(a.value)), le = () => {
    if (Array.isArray(a.value)) {
      const l = lt(a.value[0], t.weekStart), w = a.value[1] ? lt(a.value[1], t.weekStart) : [];
      return [l.map((H) => N(H)), w.map((H) => N(H))];
    }
    return lt(a.value, t.weekStart).map((l) => N(l));
  }, E = (l) => c(Ce(X(l)));
  return {
    inputValue: b,
    internalModelValue: a,
    checkBeforeEmit: () => a.value ? i.value.enabled ? i.value.partialRange ? a.value.length >= 1 : a.value.length === 2 : !!a.value : !1,
    parseExternalModelValue: se,
    formatInputValue: P,
    emitModelValue: () => (P(), t.monthPicker ? E(I) : t.timePicker ? E(A) : t.yearPicker ? E(me) : t.weekPicker ? e("update:model-value", le()) : c($(), !0))
  };
}, Pl = (e, t) => {
  const { defaultedFilters: r, propDates: a } = Se(e), { validateMonthYearInRange: n } = Mt(e), i = (g, A) => {
    let I = g;
    return r.value.months.includes(ge(I)) ? (I = A ? bt(g, 1) : Ft(g, 1), i(I, A)) : I;
  }, o = (g, A) => {
    let I = g;
    return r.value.years.includes(me(I)) ? (I = A ? ua(g, 1) : ia(g, 1), o(I, A)) : I;
  }, v = (g, A = !1) => {
    const I = $e(N(), { month: e.month, year: e.year });
    let _ = g ? bt(I, 1) : Ft(I, 1);
    e.disableYearSelect && (_ = et(_, e.year));
    let V = ge(_), p = me(_);
    r.value.months.includes(V) && (_ = i(_, g), V = ge(_), p = me(_)), r.value.years.includes(p) && (_ = o(_, g), p = me(_)), n(V, p, g, e.preventMinMaxNavigation) && b(V, p, A);
  }, b = (g, A, I) => {
    t("update-month-year", { month: g, year: A, fromNav: I });
  }, O = j(() => (g) => ba(
    $e(N(), { month: e.month, year: e.year }),
    a.value.maxDate,
    a.value.minDate,
    e.preventMinMaxNavigation,
    g
  ));
  return { handleMonthYearChange: v, isDisabled: O, updateMonthYear: b };
};
var At = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(At || {}), Ge = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e))(Ge || {}), gt = /* @__PURE__ */ ((e) => (e.top = "top", e.bottom = "bottom", e))(gt || {}), wt = /* @__PURE__ */ ((e) => (e.header = "header", e.calendar = "calendar", e.timePicker = "timePicker", e))(wt || {}), xe = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e.calendar = "calendar", e.time = "time", e.minutes = "minutes", e.hours = "hours", e.seconds = "seconds", e))(xe || {});
const Rl = ({
  menuRef: e,
  menuRefInner: t,
  inputRef: r,
  pickerWrapperRef: a,
  inline: n,
  emit: i,
  props: o,
  slots: v
}) => {
  const b = ee({}), O = ee(!1), g = ee({
    top: "0",
    left: "0"
  }), A = ee(!1), I = xt(o, "teleportCenter");
  ct(I, () => {
    g.value = JSON.parse(JSON.stringify({})), T();
  });
  const _ = (d) => {
    if (o.teleport) {
      const c = d.getBoundingClientRect();
      return {
        left: c.left + window.scrollX,
        top: c.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, V = (d, c) => {
    g.value.left = `${d + c - b.value.width}px`;
  }, p = (d) => {
    g.value.left = `${d}px`;
  }, Q = (d, c) => {
    o.position === At.left && p(d), o.position === At.right && V(d, c), o.position === At.center && (g.value.left = `${d + c / 2 - b.value.width / 2}px`);
  }, R = (d) => {
    const { width: c, height: X } = d.getBoundingClientRect(), { top: le, left: E } = o.altPosition ? o.altPosition(d) : _(d);
    return { top: +le, left: +E, width: c, height: X };
  }, W = () => {
    g.value.left = "50%", g.value.top = "50%", g.value.transform = "translate(-50%, -50%)", g.value.position = "fixed", delete g.value.opacity;
  }, B = () => {
    const d = Oe(r), { top: c, left: X, transform: le } = o.altPosition(d);
    g.value = { top: `${c}px`, left: `${X}px`, transform: le ?? "" };
  }, T = (d = !0) => {
    var c;
    if (!n.value.enabled) {
      if (I.value)
        return W();
      if (o.altPosition !== null)
        return B();
      if (d) {
        const X = o.teleport ? (c = t.value) == null ? void 0 : c.$el : e.value;
        X && (b.value = X.getBoundingClientRect()), i("recalculate-position");
      }
      return k();
    }
  }, M = ({ inputEl: d, left: c, width: X }) => {
    window.screen.width > 768 && !O.value && Q(c, X), $(d);
  }, G = (d) => {
    const { top: c, left: X, height: le, width: E } = R(d);
    g.value.top = `${le + c + +o.offset}px`, A.value = !1, O.value || (g.value.left = `${X + E / 2 - b.value.width / 2}px`), M({ inputEl: d, left: X, width: E });
  }, ne = (d) => {
    const { top: c, left: X, width: le } = R(d);
    g.value.top = `${c - +o.offset - b.value.height}px`, A.value = !0, M({ inputEl: d, left: X, width: le });
  }, $ = (d) => {
    if (o.autoPosition) {
      const { left: c, width: X } = R(d), { left: le, right: E } = b.value;
      if (!O.value) {
        if (Math.abs(le) !== Math.abs(E)) {
          if (le <= 0)
            return O.value = !0, p(c);
          if (E >= document.documentElement.clientWidth)
            return O.value = !0, V(c, X);
        }
        return Q(c, X);
      }
    }
  }, re = () => {
    const d = Oe(r);
    if (d) {
      const { height: c } = b.value, { top: X, height: le } = d.getBoundingClientRect(), m = window.innerHeight - X - le, h = X;
      return c <= m ? gt.bottom : c > m && c <= h ? gt.top : m >= h ? gt.bottom : gt.top;
    }
    return gt.bottom;
  }, se = (d) => re() === gt.bottom ? G(d) : ne(d), k = () => {
    const d = Oe(r);
    if (d)
      return o.autoPosition ? se(d) : G(d);
  }, L = function(d) {
    if (d) {
      const c = d.scrollHeight > d.clientHeight, le = window.getComputedStyle(d).overflowY.indexOf("hidden") !== -1;
      return c && !le;
    }
    return !0;
  }, Y = function(d) {
    return !d || d === document.body || d.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : L(d) ? d : Y(d.parentNode);
  }, P = (d) => {
    if (d)
      switch (o.position) {
        case At.left:
          return { left: 0, transform: "translateX(0)" };
        case At.right:
          return { left: `${d.width}px`, transform: "translateX(-100%)" };
        default:
          return { left: `${d.width / 2}px`, transform: "translateX(-50%)" };
      }
    return {};
  };
  return {
    openOnTop: A,
    menuStyle: g,
    xCorrect: O,
    setMenuPosition: T,
    getScrollableParent: Y,
    shadowRender: (d, c) => {
      var l, w, H;
      const X = document.createElement("div"), le = (l = Oe(r)) == null ? void 0 : l.getBoundingClientRect();
      X.setAttribute("id", "dp--temp-container");
      const E = (w = a.value) != null && w.clientWidth ? a.value : document.body;
      E.append(X);
      const m = P(le), h = Oa(
        d,
        {
          ...c,
          shadow: !0,
          style: { opacity: 0, position: "absolute", ...m }
        },
        Object.fromEntries(
          Object.keys(v).filter((s) => ["right-sidebar", "left-sidebar"].includes(s)).map((s) => [s, v[s]])
        )
      );
      Un(h, X), b.value = (H = h.el) == null ? void 0 : H.getBoundingClientRect(), Un(null, X), E.removeChild(X);
    }
  };
}, st = [
  { name: "clock-icon", use: ["time", "calendar", "shared"] },
  { name: "arrow-left", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-right", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-up", use: ["time", "calendar", "month-year", "shared"] },
  { name: "arrow-down", use: ["time", "calendar", "month-year", "shared"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar", "shared", "year-mode"] },
  { name: "day", use: ["calendar", "shared"] },
  { name: "month-overlay-value", use: ["calendar", "month-year", "shared"] },
  { name: "year-overlay-value", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "year-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay-header", use: ["month-year", "shared"] },
  { name: "year-overlay-header", use: ["month-year", "shared"] },
  { name: "hours-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "minutes-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "seconds-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "hours", use: ["calendar", "time", "shared"] },
  { name: "minutes", use: ["calendar", "time", "shared"] },
  { name: "month", use: ["calendar", "month-year", "shared"] },
  { name: "year", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "action-buttons", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar", "shared"] },
  { name: "marker-tooltip", use: ["calendar", "shared"] },
  { name: "action-extra", use: ["menu"] },
  { name: "time-picker-overlay", use: ["calendar", "time", "shared"] },
  { name: "am-pm-button", use: ["calendar", "time", "shared"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year", "shared"] },
  { name: "time-picker", use: ["menu", "shared"] },
  { name: "action-row", use: ["action"] },
  { name: "marker", use: ["calendar", "shared"] },
  { name: "quarter", use: ["shared"] }
], Cl = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], _l = {
  all: () => st,
  monthYear: () => st.filter((e) => e.use.includes("month-year")),
  input: () => Cl,
  timePicker: () => st.filter((e) => e.use.includes("time")),
  action: () => st.filter((e) => e.use.includes("action")),
  calendar: () => st.filter((e) => e.use.includes("calendar")),
  menu: () => st.filter((e) => e.use.includes("menu")),
  shared: () => st.filter((e) => e.use.includes("shared")),
  yearMode: () => st.filter((e) => e.use.includes("year-mode"))
}, ze = (e, t, r) => {
  const a = [];
  return _l[t]().forEach((n) => {
    e[n.name] && a.push(n.name);
  }), r != null && r.length && r.forEach((n) => {
    n.slot && a.push(n.slot);
  }), a;
}, Ht = (e) => {
  const t = j(() => (a) => e.value ? a ? e.value.open : e.value.close : ""), r = j(() => (a) => e.value ? a ? e.value.menuAppearTop : e.value.menuAppearBottom : "");
  return { transitionName: t, showTransition: !!e.value, menuTransition: r };
}, zt = (e, t) => {
  const { defaultedRange: r, defaultedTz: a } = Se(e), n = N(vt(N(), a.value.timezone)), i = ee([{ month: ge(n), year: me(n) }]), o = Vt({
    hours: r.value.enabled ? [Xe(n), Xe(n)] : Xe(n),
    minutes: r.value.enabled ? [nt(n), nt(n)] : nt(n),
    seconds: r.value.enabled ? [0, 0] : 0
  }), v = j({
    get: () => e.internalModelValue,
    set: (g) => {
      !e.readonly && !e.disabled && t("update:internal-model-value", g);
    }
  }), b = j(
    () => (g) => i.value[g] ? i.value[g].month : 0
  ), O = j(
    () => (g) => i.value[g] ? i.value[g].year : 0
  );
  return {
    calendars: i,
    time: o,
    modelValue: v,
    month: b,
    year: O
  };
}, Ol = (e, t) => {
  const { defaultedMultiCalendars: r, defaultedHighlight: a, defaultedTz: n, propDates: i, defaultedRange: o } = Se(t), { isDisabled: v } = Mt(t), b = ee(null), O = ee(vt(/* @__PURE__ */ new Date(), n.value.timezone)), g = (l) => {
    !l.current && t.hideOffsetDates || (b.value = l.value);
  }, A = () => {
    b.value = null;
  }, I = (l) => Array.isArray(e.value) && o.value.enabled && e.value[0] && b.value ? l ? Re(b.value, e.value[0]) : Pe(b.value, e.value[0]) : !0, _ = (l, w) => {
    const H = () => e.value ? w ? e.value[0] || null : e.value[1] : null, s = e.value && Array.isArray(e.value) ? H() : null;
    return be(N(l.value), s);
  }, V = (l) => {
    const w = Array.isArray(e.value) ? e.value[0] : null;
    return l ? !Pe(b.value ?? null, w) : !0;
  }, p = (l, w = !0) => (o.value.enabled || t.weekPicker) && Array.isArray(e.value) && e.value.length === 2 ? t.hideOffsetDates && !l.current ? !1 : be(N(l.value), e.value[w ? 0 : 1]) : o.value.enabled ? _(l, w) && V(w) || be(l.value, Array.isArray(e.value) ? e.value[0] : null) && I(w) : !1, Q = (l, w, H) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? l ? !1 : H ? Re(e.value[0], w.value) : Pe(e.value[0], w.value) : !1, R = (l) => !e.value || t.hideOffsetDates && !l.current ? !1 : o.value.enabled ? t.modelAuto && Array.isArray(e.value) ? be(l.value, e.value[0] ? e.value[0] : O.value) : !1 : t.multiDates && Array.isArray(e.value) ? e.value.some((w) => be(w, l.value)) : be(l.value, e.value ? e.value : O.value), W = (l) => {
    if (o.value.autoRange || t.weekPicker) {
      if (b.value) {
        if (t.hideOffsetDates && !l.current)
          return !1;
        const w = ht(b.value, +o.value.autoRange), H = lt(N(b.value), t.weekStart);
        return t.weekPicker ? be(H[1], N(l.value)) : be(w, N(l.value));
      }
      return !1;
    }
    return !1;
  }, B = (l) => {
    if (o.value.autoRange || t.weekPicker) {
      if (b.value) {
        const w = ht(b.value, +o.value.autoRange);
        if (t.hideOffsetDates && !l.current)
          return !1;
        const H = lt(N(b.value), t.weekStart);
        return t.weekPicker ? Re(l.value, H[0]) && Pe(l.value, H[1]) : Re(l.value, b.value) && Pe(l.value, w);
      }
      return !1;
    }
    return !1;
  }, T = (l) => {
    if (o.value.autoRange || t.weekPicker) {
      if (b.value) {
        if (t.hideOffsetDates && !l.current)
          return !1;
        const w = lt(N(b.value), t.weekStart);
        return t.weekPicker ? be(w[0], l.value) : be(b.value, l.value);
      }
      return !1;
    }
    return !1;
  }, M = (l) => nn(e.value, b.value, l.value), G = () => t.modelAuto && Array.isArray(t.internalModelValue) ? !!t.internalModelValue[0] : !1, ne = () => t.modelAuto ? va(t.internalModelValue) : !0, $ = (l) => {
    if (Array.isArray(e.value) && e.value.length || t.weekPicker)
      return !1;
    const w = o.value.enabled ? !p(l) && !p(l, !1) : !0;
    return !v(l.value) && !R(l) && !(!l.current && t.hideOffsetDates) && w;
  }, re = (l) => o.value.enabled ? t.modelAuto ? G() && R(l) : !1 : R(l), se = (l) => a.value ? al(l.value, i.value.highlight) : !1, k = (l) => {
    const w = v(l.value);
    return w && (typeof a.value == "function" ? !a.value(l.value, w) : !a.value.options.highlightDisabled);
  }, L = (l) => {
    var w;
    return typeof a.value == "function" ? a.value(l.value) : (w = a.value.weekdays) == null ? void 0 : w.includes(l.value.getDay());
  }, Y = (l) => (o.value.enabled || t.weekPicker) && (!(r.value.count > 0) || l.current) && ne() && !(!l.current && t.hideOffsetDates) && !R(l) ? M(l) : !1, P = (l) => {
    const { isRangeStart: w, isRangeEnd: H } = X(l), s = o.value.enabled ? w || H : !1;
    return {
      dp__cell_offset: !l.current,
      dp__pointer: !t.disabled && !(!l.current && t.hideOffsetDates) && !v(l.value),
      dp__cell_disabled: v(l.value),
      dp__cell_highlight: !k(l) && (se(l) || L(l)) && !re(l) && !s && !T(l) && !(Y(l) && t.weekPicker) && !H,
      dp__cell_highlight_active: !k(l) && (se(l) || L(l)) && re(l),
      dp__today: !t.noToday && be(l.value, O.value) && l.current,
      "dp--past": Pe(l.value, O.value),
      "dp--future": Re(l.value, O.value)
    };
  }, te = (l) => ({
    dp__active_date: re(l),
    dp__date_hover: $(l)
  }), d = (l) => {
    if (e.value && !Array.isArray(e.value)) {
      const w = lt(e.value, t.weekStart);
      return {
        ...E(l),
        dp__range_start: be(w[0], l.value),
        dp__range_end: be(w[1], l.value),
        dp__range_between_week: Re(l.value, w[0]) && Pe(l.value, w[1])
      };
    }
    return {
      ...E(l)
    };
  }, c = (l) => {
    if (e.value && Array.isArray(e.value)) {
      const w = lt(e.value[0], t.weekStart), H = e.value[1] ? lt(e.value[1], t.weekStart) : [];
      return {
        ...E(l),
        dp__range_start: be(w[0], l.value) || be(H[0], l.value),
        dp__range_end: be(w[1], l.value) || be(H[1], l.value),
        dp__range_between_week: Re(l.value, w[0]) && Pe(l.value, w[1]) || Re(l.value, H[0]) && Pe(l.value, H[1]),
        dp__range_between: Re(l.value, w[1]) && Pe(l.value, H[0])
      };
    }
    return {
      ...E(l)
    };
  }, X = (l) => {
    const w = r.value.count > 0 ? l.current && p(l) && ne() : p(l) && ne(), H = r.value.count > 0 ? l.current && p(l, !1) && ne() : p(l, !1) && ne();
    return { isRangeStart: w, isRangeEnd: H };
  }, le = (l) => {
    const { isRangeStart: w, isRangeEnd: H } = X(l);
    return {
      dp__range_start: w,
      dp__range_end: H,
      dp__range_between: Y(l),
      dp__date_hover_start: Q($(l), l, !0),
      dp__date_hover_end: Q($(l), l, !1)
    };
  }, E = (l) => ({
    ...le(l),
    dp__cell_auto_range: B(l),
    dp__cell_auto_range_start: T(l),
    dp__cell_auto_range_end: W(l)
  }), m = (l) => o.value.enabled ? o.value.autoRange ? E(l) : t.modelAuto ? { ...te(l), ...le(l) } : t.weekPicker ? c(l) : le(l) : t.weekPicker ? d(l) : te(l);
  return {
    setHoverDate: g,
    clearHoverDate: A,
    getDayClassData: (l) => t.hideOffsetDates && !l.current ? {} : {
      ...P(l),
      ...m(l),
      [t.dayClass ? t.dayClass(l.value) : ""]: !0,
      [t.calendarCellClassName]: !!t.calendarCellClassName
    }
  };
}, Mt = (e) => {
  const { defaultedFilters: t, defaultedRange: r, propDates: a } = Se(e), n = (k) => a.value.disabledDates ? typeof a.value.disabledDates == "function" ? a.value.disabledDates(N(k)) : !!en(k, a.value.disabledDates) : !1, i = (k) => {
    const L = a.value.maxDate ? Re(k, a.value.maxDate) : !1, Y = a.value.minDate ? Pe(k, a.value.minDate) : !1, P = n(k), d = t.value.months.map((m) => +m).includes(ge(k)), c = e.disabledWeekDays.length ? e.disabledWeekDays.some((m) => +m === Wa(k)) : !1, X = g(k), le = me(k), E = le < +e.yearRange[0] || le > +e.yearRange[1];
    return !(L || Y || P || d || E || c || X);
  }, o = (k, L) => Pe(...ut(a.value.minDate, k, L)) || be(...ut(a.value.minDate, k, L)), v = (k, L) => Re(...ut(a.value.maxDate, k, L)) || be(...ut(a.value.maxDate, k, L)), b = (k, L, Y) => {
    let P = !1;
    return a.value.maxDate && Y && v(k, L) && (P = !0), a.value.minDate && !Y && o(k, L) && (P = !0), P;
  }, O = (k, L, Y, P) => {
    let te = !1;
    return P ? a.value.minDate && a.value.maxDate ? te = b(k, L, Y) : (a.value.minDate && o(k, L) || a.value.maxDate && v(k, L)) && (te = !0) : te = !0, te;
  }, g = (k) => Array.isArray(a.value.allowedDates) && !a.value.allowedDates.length ? !0 : a.value.allowedDates ? !en(k, a.value.allowedDates) : !1, A = (k) => !i(k), I = (k) => r.value.noDisabledRange ? !oa({ start: k[0], end: k[1] }).some((Y) => A(Y)) : !0, _ = (k) => {
    if (k) {
      const L = me(k);
      return L >= +e.yearRange[0] && L <= e.yearRange[1];
    }
    return !0;
  }, V = (k, L) => Array.isArray(k) && k[L] && (r.value.maxRange || r.value.minRange) && _(k[L]), p = (k, L, Y = 0) => {
    if (V(L, Y)) {
      const P = Va(k, L[Y]), te = ga(L[Y], k), d = te.length === 1 ? 0 : te.filter((X) => A(X)).length, c = Math.abs(P) - (r.value.minMaxRawRange ? 0 : d);
      if (r.value.minRange && r.value.maxRange)
        return c >= +r.value.minRange && c <= +r.value.maxRange;
      if (r.value.minRange)
        return c >= +r.value.minRange;
      if (r.value.maxRange)
        return c <= +r.value.maxRange;
    }
    return !0;
  }, Q = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, R = (k) => Array.isArray(k) ? [k[0] ? bn(k[0]) : null, k[1] ? bn(k[1]) : null] : bn(k), W = (k, L, Y) => k.find(
    (P) => +P.hours === Xe(L) && P.minutes === "*" ? !0 : +P.minutes === nt(L) && +P.hours === Xe(L)
  ) && Y, B = (k, L, Y) => {
    const [P, te] = k, [d, c] = L;
    return !W(P, d, Y) && !W(te, c, Y) && Y;
  }, T = (k, L) => {
    const Y = Array.isArray(L) ? L : [L];
    return Array.isArray(e.disabledTimes) ? Array.isArray(e.disabledTimes[0]) ? B(e.disabledTimes, Y, k) : !Y.some((P) => W(e.disabledTimes, P, k)) : k;
  }, M = (k, L) => {
    const Y = Array.isArray(L) ? [kt(L[0]), L[1] ? kt(L[1]) : void 0] : kt(L), P = !e.disabledTimes(Y);
    return k && P;
  }, G = (k, L) => e.disabledTimes ? Array.isArray(e.disabledTimes) ? T(L, k) : M(L, k) : L, ne = (k) => {
    let L = !0;
    if (!k || Q())
      return !0;
    const Y = !a.value.minDate && !a.value.maxDate ? R(k) : k;
    return (e.maxTime || a.value.maxDate) && (L = xn(
      e.maxTime,
      a.value.maxDate,
      "max",
      Ce(Y),
      L
    )), (e.minTime || a.value.minDate) && (L = xn(
      e.minTime,
      a.value.minDate,
      "min",
      Ce(Y),
      L
    )), G(k, L);
  }, $ = (k) => {
    if (!e.monthPicker)
      return !0;
    let L = !0;
    const Y = N(Qe(k));
    if (a.value.minDate && a.value.maxDate) {
      const P = N(Qe(a.value.minDate)), te = N(Qe(a.value.maxDate));
      return Re(Y, P) && Pe(Y, te) || be(Y, P) || be(Y, te);
    }
    if (a.value.minDate) {
      const P = N(Qe(a.value.minDate));
      L = Re(Y, P) || be(Y, P);
    }
    if (a.value.maxDate) {
      const P = N(Qe(a.value.maxDate));
      L = Pe(Y, P) || be(Y, P);
    }
    return L;
  }, re = j(() => (k) => !e.enableTimePicker || e.ignoreTimeValidation ? !0 : ne(k)), se = j(() => (k) => e.monthPicker ? Array.isArray(k) && (r.value.enabled || e.multiDates) ? !k.filter((Y) => !$(Y)).length : $(k) : !0);
  return {
    isDisabled: A,
    validateDate: i,
    validateMonthYearInRange: O,
    isDateRangeAllowed: I,
    checkMinMaxRange: p,
    isValidTime: ne,
    isTimeValid: re,
    isMonthValid: se
  };
}, an = () => {
  const e = j(() => (a, n) => a == null ? void 0 : a.includes(n)), t = j(() => (a, n) => a.count ? a.solo ? !0 : n === 0 : !0), r = j(() => (a, n) => a.count ? a.solo ? !0 : n === a.count - 1 : !0);
  return { hideNavigationButtons: e, showLeftIcon: t, showRightIcon: r };
}, Bl = (e, t, r) => {
  const a = ee(0), n = Vt({
    [wt.timePicker]: !e.enableTimePicker || e.timePicker || e.monthPicker,
    [wt.calendar]: !1,
    [wt.header]: !1
  }), i = j(() => e.monthPicker), o = (A) => {
    var I;
    if ((I = e.flow) != null && I.length) {
      if (!A && i.value)
        return g();
      n[A] = !0, Object.keys(n).filter((_) => !n[_]).length || g();
    }
  }, v = () => {
    var A;
    (A = e.flow) != null && A.length && a.value !== -1 && (a.value += 1, t("flow-step", a.value), g());
  }, b = () => {
    a.value = -1;
  }, O = (A, I, ..._) => {
    var V, p;
    e.flow[a.value] === A && r.value && ((p = (V = r.value)[I]) == null || p.call(V, ..._));
  }, g = () => {
    O(xe.month, "toggleMonthPicker", !0), O(xe.year, "toggleYearPicker", !0), O(xe.calendar, "toggleTimePicker", !1, !0), O(xe.time, "toggleTimePicker", !0, !0);
    const A = e.flow[a.value];
    (A === xe.hours || A === xe.minutes || A === xe.seconds) && O(A, "toggleTimePicker", !0, !0, A);
  };
  return { childMount: o, updateFlowStep: v, resetFlow: b, flowStep: a };
}, ln = {
  multiCalendars: { type: [Boolean, Number, String, Object], default: void 0 },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  autoPosition: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: [String, Object], default: null },
  emitTimezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  disableYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: null },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetDates: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Function, Object],
    default: null
  },
  teleport: { type: [String, Boolean, Object], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function, Object],
    default: null
  },
  calendarClassName: { type: String, default: null },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: [Boolean, Object], default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: [Boolean, Object], default: !1 },
  textInput: { type: [Boolean, Object], default: !1 },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: [Boolean, String], default: !1 },
  actionRow: { type: Object, default: () => ({}) },
  focusStartDate: { type: Boolean, default: !1 },
  disabledTimes: { type: [Function, Array], default: void 0 },
  showLastInRange: { type: Boolean, default: !0 },
  timePickerInline: { type: Boolean, default: !1 },
  calendar: { type: Function, default: null },
  config: { type: Object, default: void 0 },
  quarterPicker: { type: Boolean, default: !1 },
  yearFirst: { type: Boolean, default: !1 },
  loading: { type: Boolean, default: !1 }
}, Je = {
  ...ln,
  shadow: { type: Boolean, default: !1 },
  flowStep: { type: Number, default: 0 },
  internalModelValue: { type: [Date, Array], default: null },
  noOverlayFocus: { type: Boolean, default: !1 },
  collapse: { type: Boolean, default: !1 },
  menuWrapRef: { type: Object, default: null }
}, Yl = {
  key: 1,
  class: "dp__input_wrap"
}, Il = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "aria-label", "aria-disabled", "aria-invalid"], Nl = {
  key: 2,
  class: "dp__clear_icon"
}, El = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...ln
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur",
    "real-blur"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, {
      defaultedTextInput: i,
      defaultedAriaLabels: o,
      defaultedInline: v,
      defaultedConfig: b,
      defaultedRange: O,
      getDefaultPattern: g,
      getDefaultStartTime: A
    } = Se(n), { checkMinMaxRange: I } = Mt(n), _ = ee(), V = ee(null), p = ee(!1), Q = ee(!1), R = j(
      () => ({
        dp__pointer: !n.disabled && !n.readonly && !i.value.enabled,
        dp__disabled: n.disabled,
        dp__input_readonly: !i.value.enabled,
        dp__input: !0,
        dp__input_icon_pad: !n.hideInputIcon,
        dp__input_valid: !!n.state,
        dp__input_invalid: n.state === !1,
        dp__input_focus: p.value || n.isMenuOpen,
        dp__input_reg: !i.value.enabled,
        [n.inputClassName]: !!n.inputClassName
      })
    ), W = () => {
      a("set-input-date", null), n.autoApply && (a("set-empty-date"), _.value = null);
    }, B = (c) => {
      const X = A();
      return ll(
        c,
        i.value.format ?? g(),
        X ?? ha({}, n.enableSeconds),
        n.inputValue,
        Q.value
      );
    }, T = (c) => {
      const { rangeSeparator: X } = i.value, [le, E] = c.split(`${X}`);
      if (le) {
        const m = B(le.trim()), h = E ? B(E.trim()) : null, l = m && h ? [m, h] : [m];
        I(h, l, 0) && (_.value = m ? l : null);
      }
    }, M = () => {
      Q.value = !0;
    }, G = (c) => {
      if (O.value.enabled)
        T(c);
      else if (n.multiDates) {
        const X = c.split(";");
        _.value = X.map((le) => B(le.trim())).filter((le) => le);
      } else
        _.value = B(c);
    }, ne = (c) => {
      var le;
      const X = typeof c == "string" ? c : (le = c.target) == null ? void 0 : le.value;
      X !== "" ? (i.value.openMenu && !n.isMenuOpen && a("open"), G(X), a("set-input-date", _.value)) : W(), Q.value = !1, a("update:input-value", X);
    }, $ = (c) => {
      i.value.enabled ? (G(c.target.value), i.value.enterSubmit && Sn(_.value) && n.inputValue !== "" ? (a("set-input-date", _.value, !0), _.value = null) : i.value.enterSubmit && n.inputValue === "" && (_.value = null, a("clear"))) : k(c);
    }, re = (c) => {
      i.value.enabled && i.value.tabSubmit && G(c.target.value), i.value.tabSubmit && Sn(_.value) && n.inputValue !== "" ? (a("set-input-date", _.value, !0, !0), _.value = null) : i.value.tabSubmit && n.inputValue === "" && (_.value = null, a("clear", !0));
    }, se = () => {
      var c;
      p.value = !0, a("focus"), i.value.enabled && i.value.selectOnFocus && ((c = V.value) == null || c.select());
    }, k = (c) => {
      c.preventDefault(), it(c, b.value, !0), i.value.enabled && i.value.openMenu && !v.value.input && !n.isMenuOpen ? a("open") : i.value.enabled || a("toggle");
    }, L = () => {
      a("real-blur"), p.value = !1, (!n.isMenuOpen || v.value.enabled && v.value.input) && a("blur"), n.autoApply && i.value.enabled && _.value && !n.isMenuOpen && (a("set-input-date", _.value), a("select-date"), _.value = null);
    }, Y = (c) => {
      it(c, b.value, !0), a("clear");
    }, P = (c) => {
      if (!i.value.enabled) {
        if (c.code === "Tab")
          return;
        c.preventDefault();
      }
    };
    return t({
      focusInput: () => {
        var c;
        (c = V.value) == null || c.focus({ preventScroll: !0 });
      },
      setParsedDate: (c) => {
        _.value = c;
      }
    }), (c, X) => {
      var le;
      return D(), z("div", { onClick: k }, [
        c.$slots.trigger && !c.$slots["dp-input"] && !u(v).enabled ? ue(c.$slots, "trigger", { key: 0 }) : q("", !0),
        !c.$slots.trigger && (!u(v).enabled || u(v).input) ? (D(), z("div", Yl, [
          c.$slots["dp-input"] && !c.$slots.trigger && (!u(v).enabled || u(v).enabled && u(v).input) ? ue(c.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            isMenuOpen: e.isMenuOpen,
            onInput: ne,
            onEnter: $,
            onTab: re,
            onClear: Y,
            onBlur: L,
            onKeypress: P,
            onPaste: M,
            openMenu: () => c.$emit("open"),
            closeMenu: () => c.$emit("close"),
            toggleMenu: () => c.$emit("toggle")
          }) : q("", !0),
          c.$slots["dp-input"] ? q("", !0) : (D(), z("input", {
            key: 1,
            id: c.uid ? `dp-input-${c.uid}` : void 0,
            ref_key: "inputRef",
            ref: V,
            name: c.name,
            class: we(R.value),
            inputmode: u(i).enabled ? "text" : "none",
            placeholder: c.placeholder,
            disabled: c.disabled,
            readonly: c.readonly,
            required: c.required,
            value: e.inputValue,
            autocomplete: c.autocomplete,
            "aria-label": (le = u(o)) == null ? void 0 : le.input,
            "aria-disabled": c.disabled || void 0,
            "aria-invalid": c.state === !1 ? !0 : void 0,
            onInput: ne,
            onKeydown: [
              ve($, ["enter"]),
              ve(re, ["tab"]),
              P
            ],
            onBlur: L,
            onFocus: se,
            onKeypress: P,
            onPaste: M
          }, null, 42, Il)),
          ce("div", {
            onClick: X[2] || (X[2] = (E) => a("toggle"))
          }, [
            c.$slots["input-icon"] && !c.hideInputIcon ? (D(), z("span", {
              key: 0,
              class: "dp__input_icon",
              onClick: X[0] || (X[0] = (E) => a("toggle"))
            }, [
              ue(c.$slots, "input-icon")
            ])) : q("", !0),
            !c.$slots["input-icon"] && !c.hideInputIcon && !c.$slots["dp-input"] ? (D(), ke(u(_t), {
              key: 1,
              class: "dp__input_icon dp__input_icons",
              onClick: X[1] || (X[1] = (E) => a("toggle"))
            })) : q("", !0)
          ]),
          c.$slots["clear-icon"] && e.inputValue && c.clearable && !c.disabled && !c.readonly ? (D(), z("span", Nl, [
            ue(c.$slots, "clear-icon", { clear: Y })
          ])) : q("", !0),
          c.clearable && !c.$slots["clear-icon"] && e.inputValue && !c.disabled && !c.readonly ? (D(), ke(u(ca), {
            key: 3,
            class: "dp__clear_icon dp__input_icons",
            onClick: X[3] || (X[3] = Me((E) => Y(E), ["prevent"]))
          })) : q("", !0)
        ])) : q("", !0)
      ]);
    };
  }
}), Fl = ["title"], Ll = ["disabled"], Wl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    calendarWidth: { type: Number, default: 0 },
    ...Je
  },
  emits: ["close-picker", "select-date", "select-now", "invalid-select"],
  setup(e, { emit: t }) {
    const r = t, a = e, {
      defaultedActionRow: n,
      defaultedPreviewFormat: i,
      defaultedMultiCalendars: o,
      defaultedTextInput: v,
      defaultedInline: b,
      defaultedRange: O,
      getDefaultPattern: g
    } = Se(a), { isTimeValid: A, isMonthValid: I } = Mt(a), { buildMatrix: _ } = mt(), V = ee(null), p = ee(null), Q = ee(!1), R = ee({}), W = ee(null), B = ee(null);
    We(() => {
      a.arrowNavigation && _([Oe(V), Oe(p)], "actionRow"), T(), window.addEventListener("resize", T);
    }), tn(() => {
      window.removeEventListener("resize", T);
    });
    const T = () => {
      Q.value = !1, setTimeout(() => {
        var d, c;
        const P = (d = W.value) == null ? void 0 : d.getBoundingClientRect(), te = (c = B.value) == null ? void 0 : c.getBoundingClientRect();
        P && te && (R.value.maxWidth = `${te.width - P.width - 20}px`), Q.value = !0;
      }, 0);
    }, M = j(() => O.value.enabled && !O.value.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), G = j(
      () => !A.value(a.internalModelValue) || !I.value(a.internalModelValue) || !M.value
    ), ne = () => {
      const P = i.value;
      return a.timePicker || a.monthPicker, P(Ce(a.internalModelValue));
    }, $ = () => {
      const P = a.internalModelValue;
      return o.value.count > 0 ? `${re(P[0])} - ${re(P[1])}` : [re(P[0]), re(P[1])];
    }, re = (P) => ka(
      P,
      i.value,
      a.formatLocale,
      v.value.rangeSeparator,
      a.modelAuto,
      g()
    ), se = j(() => !a.internalModelValue || !a.menuMount ? "" : typeof i.value == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? $() : a.multiDates ? a.internalModelValue.map((P) => `${re(P)}`) : a.modelAuto ? `${re(a.internalModelValue[0])}` : `${re(a.internalModelValue[0])} -` : re(a.internalModelValue) : ne()), k = () => a.multiDates ? "; " : " - ", L = j(
      () => Array.isArray(se.value) ? se.value.join(k()) : se.value
    ), Y = () => {
      A.value(a.internalModelValue) && I.value(a.internalModelValue) && M.value ? r("select-date") : r("invalid-select");
    };
    return (P, te) => (D(), z("div", {
      ref_key: "actionRowRef",
      ref: B,
      class: "dp__action_row"
    }, [
      P.$slots["action-row"] ? ue(P.$slots, "action-row", _e(Ye({ key: 0 }, {
        internalModelValue: P.internalModelValue,
        disabled: G.value,
        selectDate: () => P.$emit("select-date"),
        closePicker: () => P.$emit("close-picker")
      }))) : (D(), z(he, { key: 1 }, [
        u(n).showPreview ? (D(), z("div", {
          key: 0,
          class: "dp__selection_preview",
          title: L.value,
          style: qe(R.value)
        }, [
          P.$slots["action-preview"] && Q.value ? ue(P.$slots, "action-preview", {
            key: 0,
            value: P.internalModelValue
          }) : q("", !0),
          !P.$slots["action-preview"] && Q.value ? (D(), z(he, { key: 1 }, [
            ot(Ne(L.value), 1)
          ], 64)) : q("", !0)
        ], 12, Fl)) : q("", !0),
        ce("div", {
          ref_key: "actionBtnContainer",
          ref: W,
          class: "dp__action_buttons",
          "data-dp-element": "action-row"
        }, [
          P.$slots["action-buttons"] ? ue(P.$slots, "action-buttons", {
            key: 0,
            value: P.internalModelValue
          }) : q("", !0),
          P.$slots["action-buttons"] ? q("", !0) : (D(), z(he, { key: 1 }, [
            !u(b).enabled && u(n).showCancel ? (D(), z("button", {
              key: 0,
              ref_key: "cancelButtonRef",
              ref: V,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: te[0] || (te[0] = (d) => P.$emit("close-picker")),
              onKeydown: [
                te[1] || (te[1] = ve((d) => P.$emit("close-picker"), ["enter"])),
                te[2] || (te[2] = ve((d) => P.$emit("close-picker"), ["space"]))
              ]
            }, Ne(P.cancelText), 545)) : q("", !0),
            u(n).showNow ? (D(), z("button", {
              key: 1,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: te[3] || (te[3] = (d) => P.$emit("select-now")),
              onKeydown: [
                te[4] || (te[4] = ve((d) => P.$emit("select-now"), ["enter"])),
                te[5] || (te[5] = ve((d) => P.$emit("select-now"), ["space"]))
              ]
            }, Ne(P.nowButtonLabel), 33)) : q("", !0),
            u(n).showSelect ? (D(), z("button", {
              key: 2,
              ref_key: "selectButtonRef",
              ref: p,
              type: "button",
              class: "dp__action_button dp__action_select",
              disabled: G.value,
              onKeydown: [
                ve(Y, ["enter"]),
                ve(Y, ["space"])
              ],
              onClick: Y
            }, Ne(P.selectText), 41, Ll)) : q("", !0)
          ], 64))
        ], 512)
      ], 64))
    ], 512));
  }
}), Vl = ["onKeydown"], Hl = { class: "dp__selection_grid_header" }, zl = ["aria-selected", "aria-disabled", "onClick", "onKeydown", "onMouseover"], Ul = ["aria-label"], Ut = /* @__PURE__ */ Ie({
  __name: "SelectionOverlay",
  props: {
    items: {},
    type: {},
    isLast: { type: Boolean },
    arrowNavigation: { type: Boolean },
    skipButtonRef: { type: Boolean },
    headerRefs: {},
    hideNavigation: {},
    escClose: { type: Boolean },
    useRelative: { type: Boolean },
    height: {},
    textInput: { type: [Boolean, Object] },
    config: {},
    noOverlayFocus: { type: Boolean },
    focusValue: {},
    menuWrapRef: {}
  },
  emits: ["selected", "toggle", "reset-flow", "hover-value"],
  setup(e, { expose: t, emit: r }) {
    const { setSelectionGrid: a, buildMultiLevelMatrix: n, setMonthPicker: i } = mt(), o = r, v = e, { defaultedAriaLabels: b, defaultedTextInput: O, defaultedConfig: g } = Se(
      v
    ), { hideNavigationButtons: A } = an(), I = ee(!1), _ = ee(null), V = ee(null), p = ee([]), Q = ee(), R = ee(null), W = ee(0), B = ee(null);
    Ba(() => {
      _.value = null;
    }), We(() => {
      ft().then(() => k()), v.noOverlayFocus || M(), T(!0);
    }), tn(() => T(!1));
    const T = (E) => {
      var m;
      v.arrowNavigation && ((m = v.headerRefs) != null && m.length ? i(E) : a(E));
    }, M = () => {
      var m;
      const E = Oe(V);
      E && (O.value.enabled || (_.value ? (m = _.value) == null || m.focus({ preventScroll: !0 }) : E.focus({ preventScroll: !0 })), I.value = E.clientHeight < E.scrollHeight);
    }, G = j(
      () => ({
        dp__overlay: !0,
        "dp--overlay-absolute": !v.useRelative,
        "dp--overlay-relative": v.useRelative
      })
    ), ne = j(
      () => v.useRelative ? { height: `${v.height}px`, width: "260px" } : void 0
    ), $ = j(() => ({
      dp__overlay_col: !0
    })), re = j(
      () => ({
        dp__btn: !0,
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: I.value,
        dp__button_bottom: v.isLast
      })
    ), se = j(() => {
      var E, m;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((E = v.items) == null ? void 0 : E.length) <= 6,
        dp__container_block: ((m = v.items) == null ? void 0 : m.length) > 6
      };
    });
    ct(
      () => v.items,
      () => k(!1),
      { deep: !0 }
    );
    const k = (E = !0) => {
      ft().then(() => {
        const m = Oe(_), h = Oe(V), l = Oe(R), w = Oe(B), H = l ? l.getBoundingClientRect().height : 0;
        h && (h.getBoundingClientRect().height ? W.value = h.getBoundingClientRect().height - H : W.value = g.value.modeHeight - H), m && w && E && (w.scrollTop = m.offsetTop - w.offsetTop - (W.value / 2 - m.getBoundingClientRect().height) - H);
      });
    }, L = (E) => {
      E.disabled || o("selected", E.value);
    }, Y = () => {
      o("toggle"), o("reset-flow");
    }, P = () => {
      v.escClose && Y();
    }, te = (E, m, h, l) => {
      E && ((m.active || m.value === v.focusValue) && (_.value = E), v.arrowNavigation && (Array.isArray(p.value[h]) ? p.value[h][l] = E : p.value[h] = [E], d()));
    }, d = () => {
      var m, h;
      const E = (m = v.headerRefs) != null && m.length ? [v.headerRefs].concat(p.value) : p.value.concat([v.skipButtonRef ? [] : [R.value]]);
      n(Ce(E), (h = v.headerRefs) != null && h.length ? "monthPicker" : "selectionGrid");
    }, c = (E) => {
      v.arrowNavigation || it(E, g.value, !0);
    }, X = (E) => {
      Q.value = E, o("hover-value", E);
    }, le = () => {
      if (Y(), !v.isLast) {
        const E = nl(v.menuWrapRef ?? null, "action-row");
        if (E) {
          const m = ma(E);
          m == null || m.focus();
        }
      }
    };
    return t({ focusGrid: M }), (E, m) => {
      var h;
      return D(), z("div", {
        ref_key: "gridWrapRef",
        ref: V,
        class: we(G.value),
        style: qe(ne.value),
        role: "dialog",
        tabindex: "0",
        onKeydown: [
          ve(Me(P, ["prevent"]), ["esc"]),
          m[0] || (m[0] = ve(Me((l) => c(l), ["prevent"]), ["left"])),
          m[1] || (m[1] = ve(Me((l) => c(l), ["prevent"]), ["up"])),
          m[2] || (m[2] = ve(Me((l) => c(l), ["prevent"]), ["down"])),
          m[3] || (m[3] = ve(Me((l) => c(l), ["prevent"]), ["right"]))
        ]
      }, [
        ce("div", {
          ref_key: "containerRef",
          ref: B,
          class: we(se.value),
          role: "grid",
          style: qe({ height: `${W.value}px` })
        }, [
          ce("div", Hl, [
            ue(E.$slots, "header")
          ]),
          E.$slots.overlay ? ue(E.$slots, "overlay", { key: 0 }) : (D(!0), z(he, { key: 1 }, Te(E.items, (l, w) => (D(), z("div", {
            key: w,
            class: we(["dp__overlay_row", { dp__flex_row: E.items.length >= 3 }]),
            role: "row"
          }, [
            (D(!0), z(he, null, Te(l, (H, s) => (D(), z("div", {
              key: H.value,
              ref_for: !0,
              ref: (x) => te(x, H, w, s),
              role: "gridcell",
              class: we($.value),
              "aria-selected": H.active || void 0,
              "aria-disabled": H.disabled || void 0,
              tabindex: "0",
              onClick: (x) => L(H),
              onKeydown: [
                ve(Me((x) => L(H), ["prevent"]), ["enter"]),
                ve(Me((x) => L(H), ["prevent"]), ["space"])
              ],
              onMouseover: (x) => X(H.value)
            }, [
              ce("div", {
                class: we(H.className)
              }, [
                E.$slots.item ? ue(E.$slots, "item", {
                  key: 0,
                  item: H
                }) : q("", !0),
                E.$slots.item ? q("", !0) : (D(), z(he, { key: 1 }, [
                  ot(Ne(H.text), 1)
                ], 64))
              ], 2)
            ], 42, zl))), 128))
          ], 2))), 128))
        ], 6),
        E.$slots["button-icon"] ? Xt((D(), z("button", {
          key: 0,
          ref_key: "toggleButton",
          ref: R,
          type: "button",
          "aria-label": (h = u(b)) == null ? void 0 : h.toggleOverlay,
          class: we(re.value),
          tabindex: "0",
          onClick: Y,
          onKeydown: [
            ve(Y, ["enter"]),
            ve(le, ["tab"])
          ]
        }, [
          ue(E.$slots, "button-icon")
        ], 42, Ul)), [
          [Jt, !u(A)(E.hideNavigation, E.type)]
        ]) : q("", !0)
      ], 46, Vl);
    };
  }
}), rn = /* @__PURE__ */ Ie({
  __name: "InstanceWrap",
  props: {
    multiCalendars: {},
    stretch: { type: Boolean },
    collapse: { type: Boolean }
  },
  setup(e) {
    const t = e, r = j(
      () => t.multiCalendars > 0 ? [...Array(t.multiCalendars).keys()] : [0]
    ), a = j(() => ({
      dp__instance_calendar: t.multiCalendars > 0
    }));
    return (n, i) => (D(), z("div", {
      class: we({
        dp__menu_inner: !n.stretch,
        "dp--menu--inner-stretched": n.stretch,
        dp__flex_display: n.multiCalendars > 0,
        "dp--flex-display-collapsed": n.collapse
      })
    }, [
      (D(!0), z(he, null, Te(r.value, (o, v) => (D(), z("div", {
        key: o,
        class: we(a.value)
      }, [
        ue(n.$slots, "default", {
          instance: o,
          index: v
        })
      ], 2))), 128))
    ], 2));
  }
}), Kl = ["aria-label", "aria-disabled"], Nt = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "ArrowBtn",
  props: {
    ariaLabel: {},
    disabled: { type: Boolean }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: t }) {
    const r = t, a = ee(null);
    return We(() => r("set-ref", a)), (n, i) => (D(), z("button", {
      ref_key: "elRef",
      ref: a,
      type: "button",
      class: "dp__btn dp--arrow-btn-nav",
      tabindex: "0",
      "aria-label": n.ariaLabel,
      "aria-disabled": n.disabled || void 0,
      onClick: i[0] || (i[0] = (o) => n.$emit("activate")),
      onKeydown: [
        i[1] || (i[1] = ve(Me((o) => n.$emit("activate"), ["prevent"]), ["enter"])),
        i[2] || (i[2] = ve(Me((o) => n.$emit("activate"), ["prevent"]), ["space"]))
      ]
    }, [
      ce("span", {
        class: we(["dp__inner_nav", { dp__inner_nav_disabled: n.disabled }])
      }, [
        ue(n.$slots, "default")
      ], 2)
    ], 40, Kl));
  }
}), jl = { class: "dp--year-mode-picker" }, Gl = ["aria-label"], $a = /* @__PURE__ */ Ie({
  __name: "YearModePicker",
  props: {
    ...Je,
    showYearPicker: { type: Boolean, default: !1 },
    items: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    isDisabled: { type: Function, default: () => !1 }
  },
  emits: ["toggle-year-picker", "year-select", "handle-year"],
  setup(e, { emit: t }) {
    const r = t, a = e, { showRightIcon: n, showLeftIcon: i } = an(), { defaultedConfig: o, defaultedMultiCalendars: v, defaultedAriaLabels: b, defaultedTransitions: O } = Se(a), { showTransition: g, transitionName: A } = Ht(O), I = (p = !1, Q) => {
      r("toggle-year-picker", { flow: p, show: Q });
    }, _ = (p) => {
      r("year-select", p);
    }, V = (p = !1) => {
      r("handle-year", p);
    };
    return (p, Q) => {
      var R, W, B;
      return D(), z("div", jl, [
        u(i)(u(v), e.instance) ? (D(), ke(Nt, {
          key: 0,
          ref: "mpPrevIconRef",
          "aria-label": (R = u(b)) == null ? void 0 : R.prevYear,
          disabled: e.isDisabled(!1),
          onActivate: Q[0] || (Q[0] = (T) => V(!1))
        }, {
          default: pe(() => [
            p.$slots["arrow-left"] ? ue(p.$slots, "arrow-left", { key: 0 }) : q("", !0),
            p.$slots["arrow-left"] ? q("", !0) : (D(), ke(u(On), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : q("", !0),
        ce("button", {
          ref: "mpYearButtonRef",
          class: "dp__btn dp--year-select",
          type: "button",
          "aria-label": (W = u(b)) == null ? void 0 : W.openYearsOverlay,
          onClick: Q[1] || (Q[1] = () => I(!1)),
          onKeydown: Q[2] || (Q[2] = ve(() => I(!1), ["enter"]))
        }, [
          p.$slots.year ? ue(p.$slots, "year", {
            key: 0,
            year: e.year
          }) : q("", !0),
          p.$slots.year ? q("", !0) : (D(), z(he, { key: 1 }, [
            ot(Ne(e.year), 1)
          ], 64))
        ], 40, Gl),
        u(n)(u(v), e.instance) ? (D(), ke(Nt, {
          key: 1,
          ref: "mpNextIconRef",
          "aria-label": (B = u(b)) == null ? void 0 : B.nextYear,
          disabled: e.isDisabled(!0),
          onActivate: Q[3] || (Q[3] = (T) => V(!0))
        }, {
          default: pe(() => [
            p.$slots["arrow-right"] ? ue(p.$slots, "arrow-right", { key: 0 }) : q("", !0),
            p.$slots["arrow-right"] ? q("", !0) : (D(), ke(u(Bn), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : q("", !0),
        He(Ct, {
          name: u(A)(e.showYearPicker),
          css: u(g)
        }, {
          default: pe(() => [
            e.showYearPicker ? (D(), ke(Ut, {
              key: 0,
              items: e.items,
              "text-input": p.textInput,
              "esc-close": p.escClose,
              config: p.config,
              "is-last": p.autoApply && !u(o).keepActionRow,
              "hide-navigation": p.hideNavigation,
              type: "year",
              onToggle: I,
              onSelected: Q[4] || (Q[4] = (T) => _(T))
            }, Le({
              "button-icon": pe(() => [
                p.$slots["calendar-icon"] ? ue(p.$slots, "calendar-icon", { key: 0 }) : q("", !0),
                p.$slots["calendar-icon"] ? q("", !0) : (D(), ke(u(_t), { key: 1 }))
              ]),
              _: 2
            }, [
              p.$slots["year-overlay-value"] ? {
                name: "item",
                fn: pe(({ item: T }) => [
                  ue(p.$slots, "year-overlay-value", {
                    text: T.text,
                    value: T.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "text-input", "esc-close", "config", "is-last", "hide-navigation"])) : q("", !0)
          ]),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Vn = (e, t, r) => {
  if (t.value && Array.isArray(t.value))
    if (t.value.some((a) => be(e, a))) {
      const a = t.value.filter((n) => !be(n, e));
      t.value = a.length ? a : null;
    } else
      (r && +r > t.value.length || !r) && t.value.push(e);
  else
    t.value = [e];
}, Hn = (e, t, r) => {
  let a = e.value ? e.value.slice() : [];
  return a.length === 2 && a[1] !== null && (a = []), a.length ? Pe(t, a[0]) ? (a.unshift(t), r("range-start", a[0]), r("range-start", a[1])) : (a[1] = t, r("range-end", t)) : (a = [t], r("range-start", t)), e.value = a, a;
}, on = (e, t, r, a) => {
  e[0] && e[1] && r && t("auto-apply"), e[0] && !e[1] && a && r && t("auto-apply");
}, Aa = (e) => {
  Array.isArray(e.value) && e.value.length <= 2 && e.range ? e.modelValue.value = e.value.map((t) => vt(N(t), e.timezone)) : Array.isArray(e.value) || (e.modelValue.value = vt(N(e.value), e.timezone));
}, Ta = (e, t, r, a) => Array.isArray(t.value) && t.value.length === 2 ? a.value.fixedStart && (Re(e, t.value[0]) || be(e, t.value[0])) ? [t.value[0], e] : a.value.fixedEnd && (Pe(e, t.value[1]) || be(e, t.value[1])) ? [e, t.value[1]] : (r("invalid-fixed-range", e), t.value) : [], Sa = ({
  multiCalendars: e,
  highlight: t,
  propDates: r,
  calendars: a,
  modelValue: n,
  props: i,
  year: o,
  month: v,
  emit: b
}) => {
  const O = j(() => En(i.yearRange, i.reverseYears)), g = ee([!1]), A = j(() => (M, G) => {
    const ne = $e(Qe(/* @__PURE__ */ new Date()), {
      month: v.value(M),
      year: o.value(M)
    });
    return ba(
      ne,
      r.value.maxDate,
      r.value.minDate,
      i.preventMinMaxNavigation,
      G
    );
  }), I = () => {
    for (let M = 0; M < e.value.count; M++)
      if (M === 0)
        a.value[M] = a.value[0];
      else {
        const G = $e(N(), a.value[M - 1]);
        a.value[M] = { month: ge(G), year: me(ua(G, 1)) };
      }
  }, _ = (M) => {
    if (!M)
      return I();
    const G = $e(N(), a.value[M]);
    return a.value[0].year = me(ia(G, e.value.count - 1)), I();
  }, V = (M) => i.focusStartDate ? M[0] : M[1] ? M[1] : M[0], p = () => {
    if (n.value) {
      const M = Array.isArray(n.value) ? V(n.value) : n.value;
      a.value[0] = { month: ge(M), year: me(M) };
    }
  };
  We(() => {
    p(), e.value.count && I();
  });
  const Q = (M, G) => {
    a.value[G].year = M, e.value.count && !e.value.solo && _(G);
  }, R = j(() => (M) => Pt(O.value, (G) => {
    const ne = o.value(M) === G.value, $ = Wt(
      G.value,
      Rt(r.value.minDate),
      Rt(r.value.maxDate)
    ), re = Wn(t.value, G.value);
    return { active: ne, disabled: $, highlighted: re };
  })), W = (M, G) => {
    Q(M, G), T(G);
  }, B = (M, G = !1) => {
    if (!A.value(M, G)) {
      const ne = G ? o.value(M) + 1 : o.value(M) - 1;
      Q(ne, M);
    }
  }, T = (M, G = !1, ne) => {
    G || b("reset-flow"), ne !== void 0 ? g.value[M] = ne : g.value[M] = !g.value[M], g.value || b("overlay-closed");
  };
  return {
    isDisabled: A,
    groupedYears: R,
    showYearPicker: g,
    selectYear: Q,
    toggleYearPicker: T,
    handleYearSelect: W,
    handleYear: B
  };
}, Ql = (e, t) => {
  const {
    defaultedMultiCalendars: r,
    defaultedAriaLabels: a,
    defaultedTransitions: n,
    defaultedConfig: i,
    defaultedRange: o,
    defaultedHighlight: v,
    propDates: b,
    defaultedTz: O
  } = Se(e), { modelValue: g, year: A, month: I, calendars: _ } = zt(e, t), V = j(() => fa(e.formatLocale, e.locale, e.monthNameFormat)), p = ee(null), {
    selectYear: Q,
    groupedYears: R,
    showYearPicker: W,
    toggleYearPicker: B,
    handleYearSelect: T,
    handleYear: M,
    isDisabled: G
  } = Sa({
    modelValue: g,
    multiCalendars: r,
    highlight: v,
    calendars: _,
    year: A,
    propDates: b,
    month: I,
    props: e,
    emit: t
  });
  We(() => {
    e.startDate && (g.value && e.focusStartDate || !g.value) && Q(me(N(e.startDate)), 0);
  });
  const ne = (h) => h ? { month: ge(h), year: me(h) } : { month: null, year: null }, $ = () => g.value ? Array.isArray(g.value) ? g.value.map((h) => ne(h)) : ne(g.value) : ne(), re = (h, l) => {
    const w = _.value[h], H = $();
    return Array.isArray(H) ? H.some((s) => s.year === (w == null ? void 0 : w.year) && s.month === l) : (w == null ? void 0 : w.year) === H.year && l === H.month;
  }, se = (h, l, w) => {
    var s, x;
    const H = $();
    return Array.isArray(H) ? A.value(l) === ((s = H[w]) == null ? void 0 : s.year) && h === ((x = H[w]) == null ? void 0 : x.month) : !1;
  }, k = (h, l) => {
    if (o.value.enabled) {
      const w = $();
      if (Array.isArray(g.value) && Array.isArray(w)) {
        const H = se(h, l, 0) || se(h, l, 1), s = rt(Qe(N()), h, A.value(l));
        return nn(g.value, p.value, s) && !H;
      }
      return !1;
    }
    return !1;
  }, L = j(() => (h) => Pt(V.value, (l) => {
    const w = re(h, l.value), H = Wt(
      l.value,
      pa(A.value(h), b.value.minDate),
      ya(A.value(h), b.value.maxDate)
    ) || dl(b.value.disabledDates, A.value(h)).includes(l.value), s = k(l.value, h), x = wa(v.value, l.value, A.value(h));
    return { active: w, disabled: H, isBetween: s, highlighted: x };
  })), Y = (h, l) => rt(Qe(N()), h, A.value(l)), P = (h, l) => {
    const w = g.value ? g.value : Qe(/* @__PURE__ */ new Date());
    g.value = rt(w, h, A.value(l)), t("auto-apply"), t("update-flow-step");
  }, te = (h, l) => {
    let w = [];
    if (o.value.fixedEnd || o.value.fixedStart) {
      const H = Y(h, l);
      g.value = Ta(H, g, t, o), w = g.value;
    } else
      w = Hn(g, Y(h, l), t);
    on(w, t, e.autoApply, e.modelAuto);
  }, d = (h, l) => {
    Vn(Y(h, l), g, e.multiDatesLimit), t("auto-apply", !0);
  }, c = (h, l) => (_.value[l].month = h, le(l, _.value[l].year, h), e.multiDates ? d(h, l) : o.value.enabled ? te(h, l) : P(h, l)), X = (h, l) => {
    Q(h, l), le(l, h, null);
  }, le = (h, l, w) => {
    let H = w;
    if (!H && H !== 0) {
      const s = $();
      H = Array.isArray(s) ? s[h].month : s.month;
    }
    t("update-month-year", { instance: h, year: l, month: H });
  };
  return {
    groupedMonths: L,
    groupedYears: R,
    year: A,
    isDisabled: G,
    defaultedMultiCalendars: r,
    defaultedAriaLabels: a,
    defaultedTransitions: n,
    defaultedConfig: i,
    showYearPicker: W,
    modelValue: g,
    presetDate: (h, l) => {
      Aa({
        value: h,
        modelValue: g,
        range: o.value.enabled,
        timezone: l ? void 0 : O.value.timezone
      }), t("auto-apply");
    },
    setHoverDate: (h, l) => {
      p.value = Y(h, l);
    },
    selectMonth: c,
    selectYear: X,
    toggleYearPicker: B,
    handleYearSelect: T,
    handleYear: M,
    getModelMonthYear: $
  };
}, ql = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "MonthPicker",
  props: {
    ...Je
  },
  emits: [
    "update:internal-model-value",
    "overlay-closed",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year",
    "update-flow-step",
    "mount",
    "invalid-fixed-range"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = Dt(), i = ze(n, "yearMode"), o = e;
    We(() => {
      o.shadow || a("mount", null);
    });
    const {
      groupedMonths: v,
      groupedYears: b,
      year: O,
      isDisabled: g,
      defaultedMultiCalendars: A,
      defaultedConfig: I,
      showYearPicker: _,
      modelValue: V,
      presetDate: p,
      setHoverDate: Q,
      selectMonth: R,
      selectYear: W,
      toggleYearPicker: B,
      handleYearSelect: T,
      handleYear: M,
      getModelMonthYear: G
    } = Ql(o, a);
    return t({ getSidebarProps: () => ({
      modelValue: V,
      year: O,
      getModelMonthYear: G,
      selectMonth: R,
      selectYear: W,
      handleYear: M
    }), presetDate: p, toggleYearPicker: ($) => B(0, $) }), ($, re) => (D(), ke(rn, {
      "multi-calendars": u(A).count,
      collapse: $.collapse,
      stretch: ""
    }, {
      default: pe(({ instance: se }) => [
        $.$slots["month-year"] ? ue($.$slots, "month-year", _e(Ye({ key: 0 }, {
          year: u(O),
          months: u(v)(se),
          years: u(b)(se),
          selectMonth: u(R),
          selectYear: u(W),
          instance: se
        }))) : (D(), ke(Ut, {
          key: 1,
          items: u(v)(se),
          "arrow-navigation": $.arrowNavigation,
          "is-last": $.autoApply && !u(I).keepActionRow,
          "esc-close": $.escClose,
          height: u(I).modeHeight,
          config: $.config,
          "no-overlay-focus": !!($.noOverlayFocus || $.textInput),
          "use-relative": "",
          type: "month",
          onSelected: (k) => u(R)(k, se),
          onHoverValue: (k) => u(Q)(k, se)
        }, {
          header: pe(() => [
            He($a, Ye($.$props, {
              items: u(b)(se),
              instance: se,
              "show-year-picker": u(_)[se],
              year: u(O)(se),
              "is-disabled": (k) => u(g)(se, k),
              onHandleYear: (k) => u(M)(se, k),
              onYearSelect: (k) => u(T)(k, se),
              onToggleYearPicker: (k) => u(B)(se, k == null ? void 0 : k.flow, k == null ? void 0 : k.show)
            }), Le({ _: 2 }, [
              Te(u(i), (k, L) => ({
                name: k,
                fn: pe((Y) => [
                  ue($.$slots, k, _e(Fe(Y)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          _: 2
        }, 1032, ["items", "arrow-navigation", "is-last", "esc-close", "height", "config", "no-overlay-focus", "onSelected", "onHoverValue"]))
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), Xl = (e, t) => {
  const { modelValue: r } = zt(e, t), a = ee(null), { defaultedHighlight: n, defaultedFilters: i, defaultedRange: o, propDates: v } = Se(e), b = ee();
  We(() => {
    e.startDate && (r.value && e.focusStartDate || !r.value) && (b.value = me(N(e.startDate)));
  });
  const O = (p) => Array.isArray(r.value) ? r.value.some((Q) => me(Q) === p) : r.value ? me(r.value) === p : !1, g = (p) => o.value.enabled && Array.isArray(r.value) ? nn(r.value, a.value, I(p)) : !1, A = j(() => Pt(En(e.yearRange, e.reverseYears), (p) => {
    const Q = O(p.value), R = Wt(
      p.value,
      Rt(v.value.minDate),
      Rt(v.value.maxDate)
    ) || i.value.years.includes(p.value), W = g(p.value) && !Q, B = Wn(n.value, p.value);
    return { active: Q, disabled: R, isBetween: W, highlighted: B };
  })), I = (p) => et(Qe(/* @__PURE__ */ new Date()), p);
  return {
    groupedYears: A,
    modelValue: r,
    focusYear: b,
    setHoverValue: (p) => {
      a.value = et(Qe(/* @__PURE__ */ new Date()), p);
    },
    selectYear: (p) => {
      var Q;
      if (t("update-month-year", { instance: 0, year: p }), e.multiDates)
        return r.value ? Array.isArray(r.value) && (((Q = r.value) == null ? void 0 : Q.map((W) => me(W))).includes(p) ? r.value = r.value.filter((W) => me(W) !== p) : r.value.push(et(Ue(N()), p))) : r.value = [et(Ue(N()), p)], t("auto-apply", !0);
      if (o.value.enabled) {
        const R = Hn(r, I(p), t);
        return on(R, t, e.autoApply, e.modelAuto);
      }
      r.value = I(p), t("auto-apply");
    }
  };
}, Jl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "YearPicker",
  props: {
    ...Je
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { groupedYears: i, modelValue: o, focusYear: v, selectYear: b, setHoverValue: O } = Xl(n, a), { defaultedConfig: g } = Se(n);
    return t({ getSidebarProps: () => ({
      modelValue: o,
      selectYear: b
    }) }), (I, _) => (D(), z("div", null, [
      I.$slots["month-year"] ? ue(I.$slots, "month-year", _e(Ye({ key: 0 }, {
        years: u(i),
        selectYear: u(b)
      }))) : (D(), ke(Ut, {
        key: 1,
        items: u(i),
        "is-last": I.autoApply && !u(g).keepActionRow,
        height: u(g).modeHeight,
        config: I.config,
        "no-overlay-focus": !!(I.noOverlayFocus || I.textInput),
        "focus-value": u(v),
        type: "year",
        "use-relative": "",
        onSelected: u(b),
        onHoverValue: u(O)
      }, Le({ _: 2 }, [
        I.$slots["year-overlay-value"] ? {
          name: "item",
          fn: pe(({ item: V }) => [
            ue(I.$slots, "year-overlay-value", {
              text: V.text,
              value: V.value
            })
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["items", "is-last", "height", "config", "no-overlay-focus", "focus-value", "onSelected", "onHoverValue"]))
    ]));
  }
}), Zl = {
  key: 0,
  class: "dp__time_input"
}, xl = ["aria-label", "onKeydown", "onClick"], er = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), tr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), nr = ["aria-label", "disabled", "onKeydown", "onClick"], ar = ["aria-label", "onKeydown", "onClick"], lr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), rr = /* @__PURE__ */ ce("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), or = { key: 0 }, sr = ["aria-label", "onKeydown"], ur = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: { type: Function, default: () => !1 },
    ...Je
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { setTimePickerElements: i, setTimePickerBackRef: o } = mt(), { defaultedAriaLabels: v, defaultedTransitions: b, defaultedFilters: O, defaultedConfig: g, defaultedRange: A } = Se(n), { transitionName: I, showTransition: _ } = Ht(b), V = Vt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), p = ee("AM"), Q = ee(null), R = ee([]);
    We(() => {
      a("mounted");
    });
    const W = (f) => $e(/* @__PURE__ */ new Date(), {
      hours: f.hours,
      minutes: f.minutes,
      seconds: n.enableSeconds ? f.seconds : 0,
      milliseconds: 0
    }), B = j(
      () => (f) => te(f, n[f]) || M(f, n[f])
    ), T = j(() => ({ hours: n.hours, minutes: n.minutes, seconds: n.seconds })), M = (f, J) => A.value.enabled && !A.value.disableTimeRangeValidation ? !n.validateTime(f, J) : !1, G = (f, J) => {
      if (A.value.enabled && !A.value.disableTimeRangeValidation) {
        const ye = J ? +n[`${f}Increment`] : -+n[`${f}Increment`], F = n[f] + ye;
        return !n.validateTime(f, F);
      }
      return !1;
    }, ne = j(() => (f) => !le(+n[f] + +n[`${f}Increment`], f) || G(f, !0)), $ = j(() => (f) => !le(+n[f] - +n[`${f}Increment`], f) || G(f, !1)), re = (f, J) => da($e(N(), f), J), se = (f, J) => Ha($e(N(), f), J), k = j(
      () => ({
        dp__time_col: !0,
        dp__time_col_block: !n.timePickerInline,
        dp__time_col_reg_block: !n.enableSeconds && n.is24 && !n.timePickerInline,
        dp__time_col_reg_inline: !n.enableSeconds && n.is24 && n.timePickerInline,
        dp__time_col_reg_with_button: !n.enableSeconds && !n.is24,
        dp__time_col_sec: n.enableSeconds && n.is24,
        dp__time_col_sec_with_button: n.enableSeconds && !n.is24
      })
    ), L = j(() => {
      const f = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return n.enableSeconds ? f.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : f;
    }), Y = j(() => L.value.filter((f) => !f.separator)), P = j(() => (f) => {
      if (f === "hours") {
        const J = w(+n.hours);
        return { text: J < 10 ? `0${J}` : `${J}`, value: J };
      }
      return { text: n[f] < 10 ? `0${n[f]}` : `${n[f]}`, value: n[f] };
    }), te = (f, J) => {
      var F;
      if (!n.disabledTimesConfig)
        return !1;
      const ye = n.disabledTimesConfig(n.order, f === "hours" ? J : void 0);
      return ye[f] ? !!((F = ye[f]) != null && F.includes(J)) : !0;
    }, d = (f) => {
      const J = n.is24 ? 24 : 12, ye = f === "hours" ? J : 60, F = +n[`${f}GridIncrement`], S = f === "hours" && !n.is24 ? F : 0, U = [];
      for (let fe = S; fe < ye; fe += F)
        U.push({ value: fe, text: fe < 10 ? `0${fe}` : `${fe}` });
      return f === "hours" && !n.is24 && U.push({ value: 0, text: "12" }), Pt(U, (fe) => ({ active: !1, disabled: O.value.times[f].includes(fe.value) || !le(fe.value, f) || te(f, fe.value) || M(f, fe.value) }));
    }, c = (f) => f >= 0 ? f : 59, X = (f) => f >= 0 ? f : 23, le = (f, J) => {
      const ye = n.minTime ? W(yn(n.minTime)) : null, F = n.maxTime ? W(yn(n.maxTime)) : null, S = W(
        yn(
          T.value,
          J,
          J === "minutes" || J === "seconds" ? c(f) : X(f)
        )
      );
      return ye && F ? (Lt(S, F) || Tt(S, F)) && (Et(S, ye) || Tt(S, ye)) : ye ? Et(S, ye) || Tt(S, ye) : F ? Lt(S, F) || Tt(S, F) : !0;
    }, E = (f) => n[`no${f[0].toUpperCase() + f.slice(1)}Overlay`], m = (f) => {
      E(f) || (V[f] = !V[f], V[f] || a("overlay-closed"));
    }, h = (f) => f === "hours" ? Xe : f === "minutes" ? nt : St, l = (f, J = !0) => {
      const ye = J ? re : se, F = J ? +n[`${f}Increment`] : -+n[`${f}Increment`];
      le(+n[f] + F, f) && a(
        `update:${f}`,
        h(f)(ye({ [f]: +n[f] }, { [f]: +n[`${f}Increment`] }))
      );
    }, w = (f) => n.is24 ? f : (f >= 12 ? p.value = "PM" : p.value = "AM", Ja(f)), H = () => {
      p.value === "PM" ? (p.value = "AM", a("update:hours", n.hours - 12)) : (p.value = "PM", a("update:hours", n.hours + 12)), a("am-pm-change", p.value);
    }, s = (f) => {
      V[f] = !0;
    }, x = (f, J, ye) => {
      if (f && n.arrowNavigation) {
        Array.isArray(R.value[J]) ? R.value[J][ye] = f : R.value[J] = [f];
        const F = R.value.reduce(
          (S, U) => U.map((fe, De) => [...S[De] || [], U[De]]),
          []
        );
        o(n.closeTimePickerBtn), Q.value && (F[1] = F[1].concat(Q.value)), i(F, n.order);
      }
    }, ae = (f, J) => (m(f), f === "hours" && !n.is24 ? a(`update:${f}`, p.value === "PM" ? J + 12 : J) : a(`update:${f}`, J));
    return t({ openChildCmp: s }), (f, J) => {
      var ye;
      return f.disabled ? q("", !0) : (D(), z("div", Zl, [
        (D(!0), z(he, null, Te(L.value, (F, S) => {
          var U, fe, De;
          return D(), z("div", {
            key: S,
            class: we(k.value)
          }, [
            F.separator ? (D(), z(he, { key: 0 }, [
              ot(" : ")
            ], 64)) : (D(), z(he, { key: 1 }, [
              ce("button", {
                ref_for: !0,
                ref: (K) => x(K, S, 0),
                type: "button",
                class: we({
                  dp__btn: !0,
                  dp__inc_dec_button: !f.timePickerInline,
                  dp__inc_dec_button_inline: f.timePickerInline,
                  dp__tp_inline_btn_top: f.timePickerInline,
                  dp__inc_dec_button_disabled: ne.value(F.type)
                }),
                "aria-label": (U = u(v)) == null ? void 0 : U.incrementValue(F.type),
                tabindex: "0",
                onKeydown: [
                  ve(Me((K) => l(F.type), ["prevent"]), ["enter"]),
                  ve(Me((K) => l(F.type), ["prevent"]), ["space"])
                ],
                onClick: (K) => l(F.type)
              }, [
                n.timePickerInline ? (D(), z(he, { key: 1 }, [
                  er,
                  tr
                ], 64)) : (D(), z(he, { key: 0 }, [
                  f.$slots["arrow-up"] ? ue(f.$slots, "arrow-up", { key: 0 }) : q("", !0),
                  f.$slots["arrow-up"] ? q("", !0) : (D(), ke(u(In), { key: 1 }))
                ], 64))
              ], 42, xl),
              ce("button", {
                ref_for: !0,
                ref: (K) => x(K, S, 1),
                type: "button",
                "aria-label": (fe = u(v)) == null ? void 0 : fe.openTpOverlay(F.type),
                class: we({
                  dp__time_display: !0,
                  dp__time_display_block: !f.timePickerInline,
                  dp__time_display_inline: f.timePickerInline,
                  "dp--time-invalid": B.value(F.type),
                  "dp--time-overlay-btn": !B.value(F.type)
                }),
                disabled: E(F.type),
                tabindex: "0",
                onKeydown: [
                  ve(Me((K) => m(F.type), ["prevent"]), ["enter"]),
                  ve(Me((K) => m(F.type), ["prevent"]), ["space"])
                ],
                onClick: (K) => m(F.type)
              }, [
                f.$slots[F.type] ? ue(f.$slots, F.type, {
                  key: 0,
                  text: P.value(F.type).text,
                  value: P.value(F.type).value
                }) : q("", !0),
                f.$slots[F.type] ? q("", !0) : (D(), z(he, { key: 1 }, [
                  ot(Ne(P.value(F.type).text), 1)
                ], 64))
              ], 42, nr),
              ce("button", {
                ref_for: !0,
                ref: (K) => x(K, S, 2),
                type: "button",
                class: we({
                  dp__btn: !0,
                  dp__inc_dec_button: !f.timePickerInline,
                  dp__inc_dec_button_inline: f.timePickerInline,
                  dp__tp_inline_btn_bottom: f.timePickerInline,
                  dp__inc_dec_button_disabled: $.value(F.type)
                }),
                "aria-label": (De = u(v)) == null ? void 0 : De.decrementValue(F.type),
                tabindex: "0",
                onKeydown: [
                  ve(Me((K) => l(F.type, !1), ["prevent"]), ["enter"]),
                  ve(Me((K) => l(F.type, !1), ["prevent"]), ["space"])
                ],
                onClick: (K) => l(F.type, !1)
              }, [
                n.timePickerInline ? (D(), z(he, { key: 1 }, [
                  lr,
                  rr
                ], 64)) : (D(), z(he, { key: 0 }, [
                  f.$slots["arrow-down"] ? ue(f.$slots, "arrow-down", { key: 0 }) : q("", !0),
                  f.$slots["arrow-down"] ? q("", !0) : (D(), ke(u(Nn), { key: 1 }))
                ], 64))
              ], 42, ar)
            ], 64))
          ], 2);
        }), 128)),
        f.is24 ? q("", !0) : (D(), z("div", or, [
          f.$slots["am-pm-button"] ? ue(f.$slots, "am-pm-button", {
            key: 0,
            toggle: H,
            value: p.value
          }) : q("", !0),
          f.$slots["am-pm-button"] ? q("", !0) : (D(), z("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: Q,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (ye = u(v)) == null ? void 0 : ye.amPmButton,
            tabindex: "0",
            onClick: H,
            onKeydown: [
              ve(Me(H, ["prevent"]), ["enter"]),
              ve(Me(H, ["prevent"]), ["space"])
            ]
          }, Ne(p.value), 41, sr))
        ])),
        (D(!0), z(he, null, Te(Y.value, (F, S) => (D(), ke(Ct, {
          key: S,
          name: u(I)(V[F.type]),
          css: u(_)
        }, {
          default: pe(() => [
            V[F.type] ? (D(), ke(Ut, {
              key: 0,
              items: d(F.type),
              "is-last": f.autoApply && !u(g).keepActionRow,
              "esc-close": f.escClose,
              type: F.type,
              "text-input": f.textInput,
              config: f.config,
              "arrow-navigation": f.arrowNavigation,
              onSelected: (U) => ae(F.type, U),
              onToggle: (U) => m(F.type),
              onResetFlow: J[0] || (J[0] = (U) => f.$emit("reset-flow"))
            }, Le({
              "button-icon": pe(() => [
                f.$slots["clock-icon"] ? ue(f.$slots, "clock-icon", { key: 0 }) : q("", !0),
                f.$slots["clock-icon"] ? q("", !0) : (D(), ke(Rn(f.timePickerInline ? u(_t) : u(Yn)), { key: 1 }))
              ]),
              _: 2
            }, [
              f.$slots[`${F.type}-overlay-value`] ? {
                name: "item",
                fn: pe(({ item: U }) => [
                  ue(f.$slots, `${F.type}-overlay-value`, {
                    text: U.text,
                    value: U.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "is-last", "esc-close", "type", "text-input", "config", "arrow-navigation", "onSelected", "onToggle"])) : q("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), ir = { class: "dp--tp-wrap" }, dr = ["aria-label", "tabindex"], cr = ["tabindex"], fr = ["aria-label"], Pa = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: {
      type: Function,
      default: () => !1
    },
    ...Je
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { buildMatrix: i, setTimePicker: o } = mt(), v = Dt(), { defaultedTransitions: b, defaultedAriaLabels: O, defaultedTextInput: g, defaultedConfig: A, defaultedRange: I } = Se(n), { transitionName: _, showTransition: V } = Ht(b), { hideNavigationButtons: p } = an(), Q = ee(null), R = ee(null), W = ee([]), B = ee(null);
    We(() => {
      a("mount"), !n.timePicker && n.arrowNavigation ? i([Oe(Q.value)], "time") : o(!0, n.timePicker);
    });
    const T = j(() => I.value.enabled && n.modelAuto ? va(n.internalModelValue) : !0), M = ee(!1), G = (d) => ({
      hours: Array.isArray(n.hours) ? n.hours[d] : n.hours,
      minutes: Array.isArray(n.minutes) ? n.minutes[d] : n.minutes,
      seconds: Array.isArray(n.seconds) ? n.seconds[d] : n.seconds
    }), ne = j(() => {
      const d = [];
      if (I.value.enabled)
        for (let c = 0; c < 2; c++)
          d.push(G(c));
      else
        d.push(G(0));
      return d;
    }), $ = (d, c = !1, X = "") => {
      c || a("reset-flow"), M.value = d, a(d ? "overlay-opened" : "overlay-closed"), n.arrowNavigation && o(d), ft(() => {
        X !== "" && W.value[0] && W.value[0].openChildCmp(X);
      });
    }, re = j(() => ({
      dp__btn: !0,
      dp__button: !0,
      dp__button_bottom: n.autoApply && !A.value.keepActionRow
    })), se = ze(v, "timePicker"), k = (d, c, X) => I.value.enabled ? c === 0 ? [d, ne.value[1][X]] : [ne.value[0][X], d] : d, L = (d) => {
      a("update:hours", d);
    }, Y = (d) => {
      a("update:minutes", d);
    }, P = (d) => {
      a("update:seconds", d);
    }, te = () => {
      if (B.value && !g.value.enabled && !n.noOverlayFocus) {
        const d = ma(B.value);
        d && d.focus({ preventScroll: !0 });
      }
    };
    return t({ toggleTimePicker: $ }), (d, c) => {
      var X;
      return D(), z("div", ir, [
        !d.timePicker && !d.timePickerInline ? Xt((D(), z("button", {
          key: 0,
          ref_key: "openTimePickerBtn",
          ref: Q,
          type: "button",
          class: we(re.value),
          "aria-label": (X = u(O)) == null ? void 0 : X.openTimePicker,
          tabindex: d.noOverlayFocus ? void 0 : 0,
          onKeydown: [
            c[0] || (c[0] = ve((le) => $(!0), ["enter"])),
            c[1] || (c[1] = ve((le) => $(!0), ["space"]))
          ],
          onClick: c[2] || (c[2] = (le) => $(!0))
        }, [
          d.$slots["clock-icon"] ? ue(d.$slots, "clock-icon", { key: 0 }) : q("", !0),
          d.$slots["clock-icon"] ? q("", !0) : (D(), ke(u(Yn), { key: 1 }))
        ], 42, dr)), [
          [Jt, !u(p)(d.hideNavigation, "time")]
        ]) : q("", !0),
        He(Ct, {
          name: u(_)(M.value),
          css: u(V) && !d.timePickerInline
        }, {
          default: pe(() => {
            var le;
            return [
              M.value || d.timePicker || d.timePickerInline ? (D(), z("div", {
                key: 0,
                ref_key: "overlayRef",
                ref: B,
                class: we({
                  dp__overlay: !d.timePickerInline,
                  "dp--overlay-absolute": !n.timePicker && !d.timePickerInline,
                  "dp--overlay-relative": n.timePicker
                }),
                style: qe(d.timePicker ? { height: `${u(A).modeHeight}px` } : void 0),
                tabindex: d.timePickerInline ? void 0 : 0
              }, [
                ce("div", {
                  class: we(
                    d.timePickerInline ? "dp__time_picker_inline_container" : "dp__overlay_container dp__container_flex dp__time_picker_overlay_container"
                  ),
                  style: { display: "flex" }
                }, [
                  d.$slots["time-picker-overlay"] ? ue(d.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: L,
                    setMinutes: Y,
                    setSeconds: P
                  }) : q("", !0),
                  d.$slots["time-picker-overlay"] ? q("", !0) : (D(), z("div", {
                    key: 1,
                    class: we(d.timePickerInline ? "dp__flex" : "dp__overlay_row dp__flex_row")
                  }, [
                    (D(!0), z(he, null, Te(ne.value, (E, m) => Xt((D(), ke(ur, Ye({ key: m }, {
                      ...d.$props,
                      order: m,
                      hours: E.hours,
                      minutes: E.minutes,
                      seconds: E.seconds,
                      closeTimePickerBtn: R.value,
                      disabledTimesConfig: e.disabledTimesConfig,
                      disabled: m === 0 ? d.fixedStart : d.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: W,
                      "validate-time": (h, l) => e.validateTime(h, k(l, m, h)),
                      "onUpdate:hours": (h) => L(k(h, m, "hours")),
                      "onUpdate:minutes": (h) => Y(k(h, m, "minutes")),
                      "onUpdate:seconds": (h) => P(k(h, m, "seconds")),
                      onMounted: te,
                      onOverlayClosed: te,
                      onAmPmChange: c[3] || (c[3] = (h) => d.$emit("am-pm-change", h))
                    }), Le({ _: 2 }, [
                      Te(u(se), (h, l) => ({
                        name: h,
                        fn: pe((w) => [
                          ue(d.$slots, h, _e(Fe(w)))
                        ])
                      }))
                    ]), 1040, ["validate-time", "onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Jt, m === 0 ? !0 : T.value]
                    ])), 128))
                  ], 2)),
                  !d.timePicker && !d.timePickerInline ? Xt((D(), z("button", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: R,
                    type: "button",
                    class: we(re.value),
                    "aria-label": (le = u(O)) == null ? void 0 : le.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      c[4] || (c[4] = ve((E) => $(!1), ["enter"])),
                      c[5] || (c[5] = ve((E) => $(!1), ["space"]))
                    ],
                    onClick: c[6] || (c[6] = (E) => $(!1))
                  }, [
                    d.$slots["calendar-icon"] ? ue(d.$slots, "calendar-icon", { key: 0 }) : q("", !0),
                    d.$slots["calendar-icon"] ? q("", !0) : (D(), ke(u(_t), { key: 1 }))
                  ], 42, fr)), [
                    [Jt, !u(p)(d.hideNavigation, "time")]
                  ]) : q("", !0)
                ], 2)
              ], 14, cr)) : q("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Ra = (e, t, r, a) => {
  const { defaultedRange: n } = Se(e), i = (B, T) => Array.isArray(t[B]) ? t[B][T] : t[B], o = (B) => e.enableSeconds ? Array.isArray(t.seconds) ? t.seconds[B] : t.seconds : 0, v = (B, T) => B ? T !== void 0 ? dt(B, i("hours", T), i("minutes", T), o(T)) : dt(B, t.hours, t.minutes, o()) : Cn(N(), o(T)), b = (B, T) => {
    t[B] = T;
  }, O = j(() => e.modelAuto && n.value.enabled ? Array.isArray(r.value) ? r.value.length > 1 : !1 : n.value.enabled), g = (B, T) => {
    const M = Object.fromEntries(
      Object.keys(t).map((G) => G === B ? [G, T] : [G, t[G]].slice())
    );
    if (O.value && !n.value.disableTimeRangeValidation) {
      const G = ($) => r.value ? dt(
        r.value[$],
        M.hours[$],
        M.minutes[$],
        M.seconds[$]
      ) : null, ne = ($) => _n(r.value[$], 0);
      return !(be(G(0), G(1)) && (Et(G(0), ne(1)) || Lt(G(1), ne(0))));
    }
    return !0;
  }, A = (B, T) => {
    g(B, T) && (b(B, T), a && a());
  }, I = (B) => {
    A("hours", B);
  }, _ = (B) => {
    A("minutes", B);
  }, V = (B) => {
    A("seconds", B);
  }, p = (B, T, M, G) => {
    T && I(B), !T && !M && _(B), M && V(B), r.value && G(r.value);
  }, Q = (B) => {
    if (B) {
      const T = Array.isArray(B), M = T ? [+B[0].hours, +B[1].hours] : +B.hours, G = T ? [+B[0].minutes, +B[1].minutes] : +B.minutes, ne = T ? [+B[0].seconds, +B[1].seconds] : +B.seconds;
      b("hours", M), b("minutes", G), e.enableSeconds && b("seconds", ne);
    }
  }, R = (B, T) => {
    const M = {
      hours: Array.isArray(t.hours) ? t.hours[B] : t.hours,
      disabledArr: []
    };
    return (T || T === 0) && (M.hours = T), Array.isArray(e.disabledTimes) && (M.disabledArr = n.value.enabled && Array.isArray(e.disabledTimes[B]) ? e.disabledTimes[B] : e.disabledTimes), M;
  }, W = j(() => (B, T) => {
    var M;
    if (Array.isArray(e.disabledTimes)) {
      const { disabledArr: G, hours: ne } = R(B, T), $ = G.filter((re) => +re.hours === ne);
      return ((M = $[0]) == null ? void 0 : M.minutes) === "*" ? { hours: [ne], minutes: void 0, seconds: void 0 } : {
        hours: [],
        minutes: ($ == null ? void 0 : $.map((re) => +re.minutes)) ?? [],
        seconds: ($ == null ? void 0 : $.map((re) => re.seconds ? +re.seconds : void 0)) ?? []
      };
    }
    return { hours: [], minutes: [], seconds: [] };
  });
  return {
    setTime: b,
    updateHours: I,
    updateMinutes: _,
    updateSeconds: V,
    getSetDateTime: v,
    updateTimeValues: p,
    getSecondsValue: o,
    assignStartTime: Q,
    validateTime: g,
    disabledTimesConfig: W
  };
}, vr = (e, t) => {
  const { modelValue: r, time: a } = zt(e, t), { defaultedStartTime: n, defaultedRange: i } = Se(e), { updateTimeValues: o, getSetDateTime: v, setTime: b, assignStartTime: O, disabledTimesConfig: g, validateTime: A } = Ra(e, a, r), I = (T) => {
    const { hours: M, minutes: G, seconds: ne } = T;
    return { hours: +M, minutes: +G, seconds: ne ? +ne : 0 };
  }, _ = () => {
    if (e.startTime) {
      if (Array.isArray(e.startTime)) {
        const M = I(e.startTime[0]), G = I(e.startTime[1]);
        return [$e(N(), M), $e(N(), G)];
      }
      const T = I(e.startTime);
      return $e(N(), T);
    }
    return i.value.enabled ? [null, null] : null;
  }, V = () => {
    if (i.value.enabled) {
      const [T, M] = _();
      r.value = [v(T, 0), v(M, 1)];
    } else
      r.value = v(_());
  }, p = (T) => Array.isArray(T) ? [kt(N(T[0])), kt(N(T[1]))] : [kt(T ?? N())], Q = (T, M, G) => {
    b("hours", T), b("minutes", M), b("seconds", e.enableSeconds ? G : 0);
  }, R = () => {
    const [T, M] = p(r.value);
    return i.value.enabled ? Q(
      [T.hours, M.hours],
      [T.minutes, M.minutes],
      [T.seconds, M.minutes]
    ) : Q(T.hours, T.minutes, T.seconds);
  };
  We(() => {
    if (!e.shadow)
      return O(n.value), r.value ? R() : V();
  });
  const W = () => {
    Array.isArray(r.value) ? r.value = r.value.map((T, M) => T && v(T, M)) : r.value = v(r.value), t("time-update");
  };
  return {
    modelValue: r,
    time: a,
    disabledTimesConfig: g,
    updateTime: (T, M = !0, G = !1) => {
      o(T, M, G, W);
    },
    validateTime: A
  };
}, mr = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePickerSolo",
  props: {
    ...Je
  },
  emits: ["update:internal-model-value", "time-update", "am-pm-change"],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, i = Dt(), o = ze(i, "timePicker"), { time: v, modelValue: b, disabledTimesConfig: O, updateTime: g, validateTime: A } = vr(n, a);
    return t({ getSidebarProps: () => ({
      modelValue: b,
      time: v,
      updateTime: g
    }) }), (_, V) => (D(), ke(rn, {
      "multi-calendars": 0,
      stretch: ""
    }, {
      default: pe(() => [
        He(Pa, Ye(_.$props, {
          hours: u(v).hours,
          minutes: u(v).minutes,
          seconds: u(v).seconds,
          "internal-model-value": _.internalModelValue,
          "disabled-times-config": u(O),
          "validate-time": u(A),
          "onUpdate:hours": V[0] || (V[0] = (p) => u(g)(p)),
          "onUpdate:minutes": V[1] || (V[1] = (p) => u(g)(p, !1)),
          "onUpdate:seconds": V[2] || (V[2] = (p) => u(g)(p, !1, !0)),
          onAmPmChange: V[3] || (V[3] = (p) => _.$emit("am-pm-change", p))
        }), Le({ _: 2 }, [
          Te(u(o), (p, Q) => ({
            name: p,
            fn: pe((R) => [
              ue(_.$slots, p, _e(Fe(R)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"])
      ]),
      _: 3
    }));
  }
}), pr = { class: "dp__month_year_row" }, yr = ["aria-label", "onClick", "onKeydown"], gr = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DpHeader",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    ...Je
  },
  emits: ["update-month-year", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, {
      defaultedTransitions: i,
      defaultedAriaLabels: o,
      defaultedMultiCalendars: v,
      defaultedFilters: b,
      defaultedConfig: O,
      defaultedHighlight: g,
      propDates: A
    } = Se(n), { transitionName: I, showTransition: _ } = Ht(i), { buildMatrix: V } = mt(), { handleMonthYearChange: p, isDisabled: Q, updateMonthYear: R } = Pl(n, a), { showLeftIcon: W, showRightIcon: B } = an(), T = ee(!1), M = ee(!1), G = ee([null, null, null, null]);
    We(() => {
      a("mount");
    });
    const ne = (m) => ({
      get: () => n[m],
      set: (h) => {
        const l = m === Ge.month ? Ge.year : Ge.month;
        a("update-month-year", { [m]: h, [l]: n[l] }), m === Ge.month ? te(!0) : d(!0);
      }
    }), $ = j(ne(Ge.month)), re = j(ne(Ge.year)), se = j(() => (m) => ({
      month: n.month,
      year: n.year,
      items: m === Ge.month ? n.months : n.years,
      instance: n.instance,
      updateMonthYear: R,
      toggle: m === Ge.month ? te : d
    })), k = j(() => {
      const m = n.months.find((h) => h.value === n.month);
      return m || { text: "", value: 0 };
    }), L = j(() => Pt(n.months, (m) => {
      const h = n.month === m.value, l = Wt(
        m.value,
        pa(n.year, A.value.minDate),
        ya(n.year, A.value.maxDate)
      ) || b.value.months.includes(m.value), w = wa(g.value, m.value, n.year);
      return { active: h, disabled: l, highlighted: w };
    })), Y = j(() => Pt(n.years, (m) => {
      const h = n.year === m.value, l = Wt(
        m.value,
        Rt(A.value.minDate),
        Rt(A.value.maxDate)
      ) || b.value.years.includes(m.value), w = Wn(g.value, m.value);
      return { active: h, disabled: l, highlighted: w };
    })), P = (m, h) => {
      h !== void 0 ? m.value = h : m.value = !m.value, m.value || a("overlay-closed");
    }, te = (m = !1, h) => {
      c(m), P(T, h);
    }, d = (m = !1, h) => {
      c(m), P(M, h);
    }, c = (m) => {
      m || a("reset-flow");
    }, X = (m, h) => {
      n.arrowNavigation && (G.value[h] = Oe(m), V(G.value, "monthYear"));
    }, le = j(() => {
      var m, h;
      return [
        {
          type: Ge.month,
          index: 1,
          toggle: te,
          modelValue: $.value,
          updateModelValue: (l) => $.value = l,
          text: k.value.text,
          showSelectionGrid: T.value,
          items: L.value,
          ariaLabel: (m = o.value) == null ? void 0 : m.openMonthsOverlay
        },
        {
          type: Ge.year,
          index: 2,
          toggle: d,
          modelValue: re.value,
          updateModelValue: (l) => re.value = l,
          text: n.year,
          showSelectionGrid: M.value,
          items: Y.value,
          ariaLabel: (h = o.value) == null ? void 0 : h.openYearsOverlay
        }
      ];
    }), E = j(() => n.disableYearSelect ? [le.value[0]] : n.yearFirst ? [...le.value].reverse() : le.value);
    return t({
      toggleMonthPicker: te,
      toggleYearPicker: d,
      handleMonthYearChange: p
    }), (m, h) => {
      var l, w, H;
      return D(), z("div", pr, [
        m.$slots["month-year"] ? ue(m.$slots, "month-year", _e(Ye({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: u(R), handleMonthYearChange: u(p), instance: e.instance }))) : (D(), z(he, { key: 1 }, [
          u(W)(u(v), e.instance) && !m.vertical ? (D(), ke(Nt, {
            key: 0,
            "aria-label": (l = u(o)) == null ? void 0 : l.prevMonth,
            disabled: u(Q)(!1),
            onActivate: h[0] || (h[0] = (s) => u(p)(!1, !0)),
            onSetRef: h[1] || (h[1] = (s) => X(s, 0))
          }, {
            default: pe(() => [
              m.$slots["arrow-left"] ? ue(m.$slots, "arrow-left", { key: 0 }) : q("", !0),
              m.$slots["arrow-left"] ? q("", !0) : (D(), ke(u(On), { key: 1 }))
            ]),
            _: 3
          }, 8, ["aria-label", "disabled"])) : q("", !0),
          ce("div", {
            class: we(["dp__month_year_wrap", {
              dp__year_disable_select: m.disableYearSelect
            }])
          }, [
            (D(!0), z(he, null, Te(E.value, (s, x) => (D(), z(he, {
              key: s.type
            }, [
              ce("button", {
                ref_for: !0,
                ref: (ae) => X(ae, x + 1),
                type: "button",
                class: "dp__btn dp__month_year_select",
                tabindex: "0",
                "aria-label": s.ariaLabel,
                onClick: s.toggle,
                onKeydown: [
                  ve(Me(s.toggle, ["prevent"]), ["enter"]),
                  ve(Me(s.toggle, ["prevent"]), ["space"])
                ]
              }, [
                m.$slots[s.type] ? ue(m.$slots, s.type, {
                  key: 0,
                  text: s.text,
                  value: n[s.type]
                }) : q("", !0),
                m.$slots[s.type] ? q("", !0) : (D(), z(he, { key: 1 }, [
                  ot(Ne(s.text), 1)
                ], 64))
              ], 40, yr),
              He(Ct, {
                name: u(I)(s.showSelectionGrid),
                css: u(_)
              }, {
                default: pe(() => [
                  s.showSelectionGrid ? (D(), ke(Ut, {
                    key: 0,
                    items: s.items,
                    "arrow-navigation": m.arrowNavigation,
                    "hide-navigation": m.hideNavigation,
                    "is-last": m.autoApply && !u(O).keepActionRow,
                    "skip-button-ref": !1,
                    config: m.config,
                    type: s.type,
                    "header-refs": [],
                    "esc-close": m.escClose,
                    "menu-wrap-ref": m.menuWrapRef,
                    "text-input": m.textInput,
                    onSelected: s.updateModelValue,
                    onToggle: s.toggle
                  }, Le({
                    "button-icon": pe(() => [
                      m.$slots["calendar-icon"] ? ue(m.$slots, "calendar-icon", { key: 0 }) : q("", !0),
                      m.$slots["calendar-icon"] ? q("", !0) : (D(), ke(u(_t), { key: 1 }))
                    ]),
                    _: 2
                  }, [
                    m.$slots[`${s.type}-overlay-value`] ? {
                      name: "item",
                      fn: pe(({ item: ae }) => [
                        ue(m.$slots, `${s.type}-overlay-value`, {
                          text: ae.text,
                          value: ae.value
                        })
                      ]),
                      key: "0"
                    } : void 0,
                    m.$slots[`${s.type}-overlay`] ? {
                      name: "overlay",
                      fn: pe(() => [
                        ue(m.$slots, `${s.type}-overlay`, _e(Fe(se.value(s.type))))
                      ]),
                      key: "1"
                    } : void 0,
                    m.$slots[`${s.type}-overlay-header`] ? {
                      name: "header",
                      fn: pe(() => [
                        ue(m.$slots, `${s.type}-overlay-header`, {
                          toggle: s.toggle
                        })
                      ]),
                      key: "2"
                    } : void 0
                  ]), 1032, ["items", "arrow-navigation", "hide-navigation", "is-last", "config", "type", "esc-close", "menu-wrap-ref", "text-input", "onSelected", "onToggle"])) : q("", !0)
                ]),
                _: 2
              }, 1032, ["name", "css"])
            ], 64))), 128))
          ], 2),
          u(W)(u(v), e.instance) && m.vertical ? (D(), ke(Nt, {
            key: 1,
            "aria-label": (w = u(o)) == null ? void 0 : w.prevMonth,
            disabled: u(Q)(!1),
            onActivate: h[2] || (h[2] = (s) => u(p)(!1, !0))
          }, {
            default: pe(() => [
              m.$slots["arrow-up"] ? ue(m.$slots, "arrow-up", { key: 0 }) : q("", !0),
              m.$slots["arrow-up"] ? q("", !0) : (D(), ke(u(In), { key: 1 }))
            ]),
            _: 3
          }, 8, ["aria-label", "disabled"])) : q("", !0),
          u(B)(u(v), e.instance) ? (D(), ke(Nt, {
            key: 2,
            ref: "rightIcon",
            disabled: u(Q)(!0),
            "aria-label": (H = u(o)) == null ? void 0 : H.nextMonth,
            onActivate: h[3] || (h[3] = (s) => u(p)(!0, !0)),
            onSetRef: h[4] || (h[4] = (s) => X(s, m.disableYearSelect ? 2 : 3))
          }, {
            default: pe(() => [
              m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? ue(m.$slots, m.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : q("", !0),
              m.$slots[m.vertical ? "arrow-down" : "arrow-right"] ? q("", !0) : (D(), ke(Rn(m.vertical ? u(Nn) : u(Bn)), { key: 1 }))
            ]),
            _: 3
          }, 8, ["disabled", "aria-label"])) : q("", !0)
        ], 64))
      ]);
    };
  }
}), hr = ["aria-label"], br = {
  class: "dp__calendar_header",
  role: "row"
}, kr = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, wr = /* @__PURE__ */ ce("div", { class: "dp__calendar_header_separator" }, null, -1), Dr = ["aria-label"], Mr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, $r = { class: "dp__cell_inner" }, Ar = ["id", "aria-selected", "aria-disabled", "aria-label", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], Tr = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DpCalendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...Je
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { buildMultiLevelMatrix: i } = mt(), {
      defaultedTransitions: o,
      defaultedConfig: v,
      defaultedAriaLabels: b,
      defaultedMultiCalendars: O,
      defaultedWeekNumbers: g
    } = Se(n), A = ee(null), I = ee({
      bottom: "",
      left: "",
      transform: ""
    }), _ = ee([]), V = ee(null), p = ee(!0), Q = ee(""), R = ee({ startX: 0, endX: 0, startY: 0, endY: 0 }), W = ee([]), B = ee({ left: "50%" }), T = j(() => n.calendar ? n.calendar(n.mappedDates) : n.mappedDates), M = j(() => n.dayNames ? Array.isArray(n.dayNames) ? n.dayNames : n.dayNames(n.locale, +n.weekStart) : Xa(n.formatLocale, n.locale, +n.weekStart));
    We(() => {
      a("mount", { cmp: "calendar", refs: _ }), v.value.noSwipe || V.value && (V.value.addEventListener("touchstart", d, { passive: !1 }), V.value.addEventListener("touchend", c, { passive: !1 }), V.value.addEventListener("touchmove", X, { passive: !1 })), n.monthChangeOnScroll && V.value && V.value.addEventListener("wheel", m, { passive: !1 });
    });
    const G = (s) => s ? n.vertical ? "vNext" : "next" : n.vertical ? "vPrevious" : "previous", ne = (s, x) => {
      if (n.transitions) {
        const ae = Ue(rt(N(), n.month, n.year));
        Q.value = Re(Ue(rt(N(), s, x)), ae) ? o.value[G(!0)] : o.value[G(!1)], p.value = !1, ft(() => {
          p.value = !0;
        });
      }
    }, $ = j(
      () => ({
        [n.calendarClassName]: !!n.calendarClassName
      })
    ), re = j(() => (s) => {
      const x = Za(s);
      return {
        dp__marker_dot: x.type === "dot",
        dp__marker_line: x.type === "line"
      };
    }), se = j(() => (s) => be(s, A.value)), k = j(() => ({
      dp__calendar: !0,
      dp__calendar_next: O.value.count > 0 && n.instance !== 0
    })), L = j(() => (s) => n.hideOffsetDates ? s.current : !0), Y = (s) => tt(s, "yyyy-MM-dd"), P = async (s, x, ae) => {
      var f, J;
      if (a("set-hover-date", s), (J = (f = s.marker) == null ? void 0 : f.tooltip) != null && J.length) {
        const ye = Oe(_.value[x][ae]);
        if (ye) {
          const { width: F, height: S } = ye.getBoundingClientRect();
          A.value = s.value;
          let U = { left: `${F / 2}px` }, fe = -50;
          if (await ft(), W.value[0]) {
            const { left: De, width: K } = W.value[0].getBoundingClientRect();
            De < 0 && (U = { left: "0" }, fe = 0, B.value.left = `${F / 2}px`), window.innerWidth < De + K && (U = { right: "0" }, fe = 0, B.value.left = `${K - F / 2}px`);
          }
          I.value = {
            bottom: `${S}px`,
            ...U,
            transform: `translateX(${fe}%)`
          }, a("tooltip-open", s.marker);
        }
      }
    }, te = (s) => {
      A.value && (A.value = null, I.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), a("tooltip-close", s.marker));
    }, d = (s) => {
      R.value.startX = s.changedTouches[0].screenX, R.value.startY = s.changedTouches[0].screenY;
    }, c = (s) => {
      R.value.endX = s.changedTouches[0].screenX, R.value.endY = s.changedTouches[0].screenY, le();
    }, X = (s) => {
      n.vertical && !n.inline && s.preventDefault();
    }, le = () => {
      const s = n.vertical ? "Y" : "X";
      Math.abs(R.value[`start${s}`] - R.value[`end${s}`]) > 10 && a("handle-swipe", R.value[`start${s}`] > R.value[`end${s}`] ? "right" : "left");
    }, E = (s, x, ae) => {
      s && (Array.isArray(_.value[x]) ? _.value[x][ae] = s : _.value[x] = [s]), n.arrowNavigation && i(_.value, "calendar");
    }, m = (s) => {
      n.monthChangeOnScroll && (s.preventDefault(), a("handle-scroll", s));
    }, h = (s) => g.value.type === "local" ? za(s.value, { weekStartsOn: +n.weekStart }) : g.value.type === "iso" ? Ua(s.value) : typeof g.value.type == "function" ? g.value.type(s.value) : "", l = (s) => {
      const x = s[0];
      return g.value.hideOnOffsetDates ? s.some((ae) => ae.current) ? h(x) : "" : h(x);
    }, w = (s, x) => {
      it(s, v.value), a("select-date", x);
    }, H = (s) => {
      it(s, v.value);
    };
    return t({ triggerTransition: ne }), (s, x) => {
      var ae;
      return D(), z("div", {
        class: we(k.value)
      }, [
        ce("div", {
          ref_key: "calendarWrapRef",
          ref: V,
          role: "grid",
          class: we($.value),
          "aria-label": (ae = u(b)) == null ? void 0 : ae.calendarWrap
        }, [
          ce("div", br, [
            s.weekNumbers ? (D(), z("div", kr, Ne(s.weekNumName), 1)) : q("", !0),
            (D(!0), z(he, null, Te(M.value, (f, J) => (D(), z("div", {
              key: J,
              class: "dp__calendar_header_item",
              role: "gridcell"
            }, [
              s.$slots["calendar-header"] ? ue(s.$slots, "calendar-header", {
                key: 0,
                day: f,
                index: J
              }) : q("", !0),
              s.$slots["calendar-header"] ? q("", !0) : (D(), z(he, { key: 1 }, [
                ot(Ne(f), 1)
              ], 64))
            ]))), 128))
          ]),
          wr,
          He(Ct, {
            name: Q.value,
            css: !!s.transitions
          }, {
            default: pe(() => {
              var f;
              return [
                p.value ? (D(), z("div", {
                  key: 0,
                  class: "dp__calendar",
                  role: "rowgroup",
                  "aria-label": ((f = u(b)) == null ? void 0 : f.calendarDays) || void 0
                }, [
                  (D(!0), z(he, null, Te(T.value, (J, ye) => (D(), z("div", {
                    key: ye,
                    class: "dp__calendar_row",
                    role: "row"
                  }, [
                    s.weekNumbers ? (D(), z("div", Mr, [
                      ce("div", $r, Ne(l(J.days)), 1)
                    ])) : q("", !0),
                    (D(!0), z(he, null, Te(J.days, (F, S) => {
                      var U, fe, De;
                      return D(), z("div", {
                        id: Y(F.value),
                        ref_for: !0,
                        ref: (K) => E(K, ye, S),
                        key: S + ye,
                        role: "gridcell",
                        class: "dp__calendar_item",
                        "aria-selected": (F.classData.dp__active_date || F.classData.dp__range_start || F.classData.dp__range_start) ?? void 0,
                        "aria-disabled": F.classData.dp__cell_disabled || void 0,
                        "aria-label": (fe = (U = u(b)) == null ? void 0 : U.day) == null ? void 0 : fe.call(U, F),
                        tabindex: "0",
                        onClick: Me((K) => w(K, F), ["prevent"]),
                        onKeydown: [
                          ve((K) => s.$emit("select-date", F), ["enter"]),
                          ve((K) => s.$emit("handle-space", F), ["space"])
                        ],
                        onMouseenter: (K) => P(F, ye, S),
                        onMouseleave: (K) => te(F)
                      }, [
                        ce("div", {
                          class: we(["dp__cell_inner", F.classData])
                        }, [
                          s.$slots.day && L.value(F) ? ue(s.$slots, "day", {
                            key: 0,
                            day: +F.text,
                            date: F.value
                          }) : q("", !0),
                          s.$slots.day ? q("", !0) : (D(), z(he, { key: 1 }, [
                            ot(Ne(F.text), 1)
                          ], 64)),
                          F.marker && L.value(F) ? (D(), z(he, { key: 2 }, [
                            s.$slots.marker ? ue(s.$slots, "marker", {
                              key: 0,
                              marker: F.marker,
                              day: +F.text,
                              date: F.value
                            }) : (D(), z("div", {
                              key: 1,
                              class: we(re.value(F.marker)),
                              style: qe(F.marker.color ? { backgroundColor: F.marker.color } : {})
                            }, null, 6))
                          ], 64)) : q("", !0),
                          se.value(F.value) ? (D(), z("div", {
                            key: 3,
                            ref_for: !0,
                            ref_key: "activeTooltip",
                            ref: W,
                            class: "dp__marker_tooltip",
                            style: qe(I.value)
                          }, [
                            (De = F.marker) != null && De.tooltip ? (D(), z("div", {
                              key: 0,
                              class: "dp__tooltip_content",
                              onClick: H
                            }, [
                              (D(!0), z(he, null, Te(F.marker.tooltip, (K, je) => (D(), z("div", {
                                key: je,
                                class: "dp__tooltip_text"
                              }, [
                                s.$slots["marker-tooltip"] ? ue(s.$slots, "marker-tooltip", {
                                  key: 0,
                                  tooltip: K,
                                  day: F.value
                                }) : q("", !0),
                                s.$slots["marker-tooltip"] ? q("", !0) : (D(), z(he, { key: 1 }, [
                                  ce("div", {
                                    class: "dp__tooltip_mark",
                                    style: qe(K.color ? { backgroundColor: K.color } : {})
                                  }, null, 4),
                                  ce("div", null, Ne(K.text), 1)
                                ], 64))
                              ]))), 128)),
                              ce("div", {
                                class: "dp__arrow_bottom_tp",
                                style: qe(B.value)
                              }, null, 4)
                            ])) : q("", !0)
                          ], 4)) : q("", !0)
                        ], 2)
                      ], 40, Ar);
                    }), 128))
                  ]))), 128))
                ], 8, Dr)) : q("", !0)
              ];
            }),
            _: 3
          }, 8, ["name", "css"])
        ], 10, hr)
      ], 2);
    };
  }
}), na = (e) => Array.isArray(e), Sr = (e, t, r, a) => {
  const n = ee([]), i = ee(/* @__PURE__ */ new Date()), { modelValue: o, calendars: v, time: b } = zt(e, t), { defaultedMultiCalendars: O, defaultedStartTime: g, defaultedRange: A, defaultedTz: I, propDates: _ } = Se(e), { validateMonthYearInRange: V, isDisabled: p, isDateRangeAllowed: Q, checkMinMaxRange: R } = Mt(e), { updateTimeValues: W, getSetDateTime: B, setTime: T, assignStartTime: M, validateTime: G, disabledTimesConfig: ne } = Ra(e, b, o, a), $ = j(
    () => (y) => v.value[y] ? v.value[y].month : 0
  ), re = j(
    () => (y) => v.value[y] ? v.value[y].year : 0
  ), se = (y, Z, ie) => {
    var C, oe;
    v.value[y] || (v.value[y] = { month: 0, year: 0 }), v.value[y].month = Jn(Z) ? (C = v.value[y]) == null ? void 0 : C.month : Z, v.value[y].year = Jn(ie) ? (oe = v.value[y]) == null ? void 0 : oe.year : ie;
  }, k = () => {
    e.autoApply && t("select-date");
  };
  ct(
    o,
    (y, Z) => {
      JSON.stringify(y) !== JSON.stringify(Z) && P();
    },
    { deep: !0 }
  ), We(() => {
    e.shadow || (o.value || (H(), g.value && M(g.value)), P(!0), e.focusStartDate && e.startDate && H());
  });
  const L = j(() => {
    var y;
    return (y = e.flow) != null && y.length && !e.partialFlow ? e.flowStep === e.flow.length : !0;
  }), Y = () => {
    e.autoApply && L.value && t("auto-apply", e.partialFlow);
  }, P = (y = !1) => {
    if (o.value)
      return Array.isArray(o.value) ? (n.value = o.value, m(y)) : c(o.value, y);
    if (O.value.count && y && !e.startDate)
      return d(N(), y);
  }, te = () => Array.isArray(o.value) && A.value.enabled ? ge(o.value[0]) === ge(o.value[1] ?? o.value[0]) : !1, d = (y, Z = !1) => {
    if ((!O.value.count || !O.value.static || Z) && se(0, ge(y), me(y)), O.value.count && (!O.value.solo || !o.value || te()))
      for (let ie = 1; ie < O.value.count; ie++) {
        const C = $e(N(), { month: $.value(ie - 1), year: re.value(ie - 1) }), oe = da(C, { months: 1 });
        v.value[ie] = { month: ge(oe), year: me(oe) };
      }
  }, c = (y, Z) => {
    d(y), T("hours", Xe(y)), T("minutes", nt(y)), T("seconds", St(y)), O.value.count && Z && w();
  }, X = (y) => {
    if (O.value.count) {
      if (O.value.solo)
        return 0;
      const Z = ge(y[0]), ie = ge(y[1]);
      return Math.abs(ie - Z) < O.value.count ? 0 : 1;
    }
    return 1;
  }, le = (y, Z) => {
    y[1] && A.value.showLastInRange ? d(y[X(y)], Z) : d(y[0], Z);
    const ie = (C, oe) => [
      C(y[0]),
      y[1] ? C(y[1]) : b[oe][1]
    ];
    T("hours", ie(Xe, "hours")), T("minutes", ie(nt, "minutes")), T("seconds", ie(St, "seconds"));
  }, E = (y, Z) => {
    if ((A.value.enabled || e.weekPicker) && !e.multiDates)
      return le(y, Z);
    if (e.multiDates && Z) {
      const ie = y[y.length - 1];
      return c(ie, Z);
    }
  }, m = (y) => {
    const Z = o.value;
    E(Z, y), O.value.count && O.value.solo && w();
  }, h = (y, Z) => {
    const ie = $e(N(), { month: $.value(Z), year: re.value(Z) }), C = y < 0 ? bt(ie, 1) : Ft(ie, 1);
    V(ge(C), me(C), y < 0, e.preventMinMaxNavigation) && (se(Z, ge(C), me(C)), t("update-month-year", { instance: Z, month: ge(C), year: me(C) }), O.value.count && !O.value.solo && l(Z), r());
  }, l = (y) => {
    for (let Z = y - 1; Z >= 0; Z--) {
      const ie = Ft($e(N(), { month: $.value(Z + 1), year: re.value(Z + 1) }), 1);
      se(Z, ge(ie), me(ie));
    }
    for (let Z = y + 1; Z <= O.value.count - 1; Z++) {
      const ie = bt($e(N(), { month: $.value(Z - 1), year: re.value(Z - 1) }), 1);
      se(Z, ge(ie), me(ie));
    }
  }, w = () => {
    if (Array.isArray(o.value) && o.value.length === 2) {
      const y = N(
        N(o.value[1] ? o.value[1] : bt(o.value[0], 1))
      ), [Z, ie] = [ge(o.value[0]), me(o.value[0])], [C, oe] = [ge(o.value[1]), me(o.value[1])];
      (Z !== C || Z === C && ie !== oe) && O.value.solo && se(1, ge(y), me(y));
    } else
      o.value && !Array.isArray(o.value) && (se(0, ge(o.value), me(o.value)), d(N()));
  }, H = () => {
    e.startDate && (se(0, ge(N(e.startDate)), me(N(e.startDate))), O.value.count && l(0));
  }, s = (y, Z) => {
    if (e.monthChangeOnScroll) {
      const ie = (/* @__PURE__ */ new Date()).getTime() - i.value.getTime(), C = Math.abs(y.deltaY);
      let oe = 500;
      C > 1 && (oe = 100), C > 100 && (oe = 0), ie > oe && (i.value = /* @__PURE__ */ new Date(), h(e.monthChangeOnScroll !== "inverse" ? -y.deltaY : y.deltaY, Z));
    }
  }, x = (y, Z, ie = !1) => {
    e.monthChangeOnArrows && e.vertical === ie && ae(y, Z);
  }, ae = (y, Z) => {
    h(y === "right" ? -1 : 1, Z);
  }, f = (y) => {
    if (_.value.markers)
      return en(y.value, _.value.markers);
  }, J = (y, Z) => {
    switch (e.sixWeeks === !0 ? "append" : e.sixWeeks) {
      case "prepend":
        return [!0, !1];
      case "center":
        return [y == 0, !0];
      case "fair":
        return [y == 0 || Z > y, !0];
      case "append":
        return [!1, !1];
      default:
        return [!1, !1];
    }
  }, ye = (y, Z, ie, C) => {
    if (e.sixWeeks && y.length < 6) {
      const oe = 6 - y.length, de = (Z.getDay() + 7 - C) % 7, Ze = 6 - (ie.getDay() + 7 - C) % 7, [pt, vn] = J(de, Ze);
      for (let yt = 1; yt <= oe; yt++)
        if (vn ? !!(yt % 2) == pt : pt) {
          const Gt = y[0].days[0], mn = F(ht(Gt.value, -7), ge(Z));
          y.unshift({ days: mn });
        } else {
          const Gt = y[y.length - 1], mn = Gt.days[Gt.days.length - 1], _a = F(ht(mn.value, 1), ge(Z));
          y.push({ days: _a });
        }
    }
    return y;
  }, F = (y, Z) => {
    const ie = N(y), C = [];
    for (let oe = 0; oe < 7; oe++) {
      const de = ht(ie, oe), at = ge(de) !== Z;
      C.push({
        text: e.hideOffsetDates && at ? "" : de.getDate(),
        value: de,
        current: !at,
        classData: {}
      });
    }
    return C;
  }, S = (y, Z) => {
    const ie = [], C = new Date(Z, y), oe = new Date(Z, y + 1, 0), de = e.weekStart, at = sa(C, { weekStartsOn: de }), Ze = (pt) => {
      const vn = F(pt, y);
      if (ie.push({ days: vn }), !ie[ie.length - 1].days.some(
        (yt) => be(Ue(yt.value), Ue(oe))
      )) {
        const yt = ht(pt, 7);
        Ze(yt);
      }
    };
    return Ze(at), ye(ie, C, oe, de);
  }, U = (y) => {
    const Z = dt(N(y.value), b.hours, b.minutes, Ot());
    t("date-update", Z), e.multiDates ? Vn(Z, o, e.multiDatesLimit) : o.value = Z, a(), ft().then(() => {
      Y();
    });
  }, fe = (y) => A.value.noDisabledRange ? ga(n.value[0], y).some((ie) => p(ie)) : !1, De = () => {
    n.value = o.value ? o.value.slice() : [], n.value.length === 2 && !(A.value.fixedStart || A.value.fixedEnd) && (n.value = []);
  }, K = (y, Z) => {
    const ie = [
      N(y.value),
      ht(N(y.value), +A.value.autoRange)
    ];
    Q(ie) ? (Z && je(y.value), n.value = ie) : t("invalid-date", y.value);
  }, je = (y) => {
    const Z = ge(N(y)), ie = me(N(y));
    if (se(0, Z, ie), O.value.count > 0)
      for (let C = 1; C < O.value.count; C++) {
        const oe = ol(
          $e(N(y), { year: $.value(C - 1), month: re.value(C - 1) })
        );
        se(C, oe.month, oe.year);
      }
  }, Ve = (y) => {
    if (fe(y.value) || !R(y.value, o.value, A.value.fixedStart ? 0 : 1))
      return t("invalid-date", y.value);
    n.value = Ta(N(y.value), o, t, A);
  }, Kt = (y, Z) => {
    if (De(), A.value.autoRange)
      return K(y, Z);
    if (A.value.fixedStart || A.value.fixedEnd)
      return Ve(y);
    n.value[0] ? R(N(y.value), o.value) && !fe(y.value) ? Pe(N(y.value), N(n.value[0])) ? (n.value.unshift(N(y.value)), t("range-end", n.value[0])) : (n.value[1] = N(y.value), t("range-end", n.value[1])) : (e.autoApply && t("auto-apply-invalid", y.value), t("invalid-date", y.value)) : (n.value[0] = N(y.value), t("range-start", n.value[0]));
  }, Ot = (y = !0) => e.enableSeconds ? Array.isArray(b.seconds) ? y ? b.seconds[0] : b.seconds[1] : b.seconds : 0, Bt = (y) => {
    n.value[y] = dt(
      n.value[y],
      b.hours[y],
      b.minutes[y],
      Ot(y !== 1)
    );
  }, Yt = () => {
    var y, Z;
    n.value[0] && n.value[1] && +((y = n.value) == null ? void 0 : y[0]) > +((Z = n.value) == null ? void 0 : Z[1]) && (n.value.reverse(), t("range-start", n.value[0]), t("range-end", n.value[1]));
  }, Ke = () => {
    n.value.length && (n.value[0] && !n.value[1] ? Bt(0) : (Bt(0), Bt(1), a()), Yt(), o.value = n.value.slice(), on(n.value, t, e.autoApply, e.modelAuto));
  }, sn = (y, Z = !1) => {
    if (p(y.value) || !y.current && e.hideOffsetDates)
      return t("invalid-date", y.value);
    if (!A.value.enabled)
      return U(y);
    na(b.hours) && na(b.minutes) && !e.multiDates && (Kt(y, Z), Ke());
  }, un = (y, Z) => {
    var C;
    se(y, Z.month, Z.year), O.value.count && !O.value.solo && l(y), t("update-month-year", { instance: y, month: Z.month, year: Z.year }), r(O.value.solo ? y : void 0);
    const ie = (C = e.flow) != null && C.length ? e.flow[e.flowStep] : void 0;
    !Z.fromNav && (ie === xe.month || ie === xe.year) && a();
  }, jt = (y, Z) => {
    Aa({
      value: y,
      modelValue: o,
      range: A.value.enabled,
      timezone: Z ? void 0 : I.value.timezone
    }), k(), e.multiCalendars && ft().then(() => P(!0));
  }, dn = () => {
    A.value.enabled ? o.value && Array.isArray(o.value) && o.value[0] ? o.value = Pe(N(), o.value[0]) ? [N(), o.value[0]] : [o.value[0], N()] : o.value = [N()] : o.value = N(), k();
  }, cn = () => {
    if (Array.isArray(o.value))
      if (e.multiDates) {
        const y = fn();
        o.value[o.value.length - 1] = B(y);
      } else
        o.value = o.value.map((y, Z) => y && B(y, Z));
    else
      o.value = B(o.value);
    t("time-update");
  }, fn = () => Array.isArray(o.value) && o.value.length ? o.value[o.value.length - 1] : null;
  return {
    calendars: v,
    modelValue: o,
    month: $,
    year: re,
    time: b,
    disabledTimesConfig: ne,
    validateTime: G,
    getCalendarDays: S,
    getMarker: f,
    handleScroll: s,
    handleSwipe: ae,
    handleArrow: x,
    selectDate: sn,
    updateMonthYear: un,
    presetDate: jt,
    selectCurrentDate: dn,
    updateTime: (y, Z = !0, ie = !1) => {
      W(y, Z, ie, cn);
    }
  };
}, Pr = { key: 0 }, Rr = /* @__PURE__ */ Ie({
  __name: "DatePicker",
  props: {
    ...Je
  },
  emits: [
    "tooltip-open",
    "tooltip-close",
    "mount",
    "update:internal-model-value",
    "update-flow-step",
    "reset-flow",
    "auto-apply",
    "focus-menu",
    "select-date",
    "range-start",
    "range-end",
    "invalid-fixed-range",
    "time-update",
    "am-pm-change",
    "time-picker-open",
    "time-picker-close",
    "recalculate-position",
    "update-month-year",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, {
      calendars: i,
      month: o,
      year: v,
      modelValue: b,
      time: O,
      disabledTimesConfig: g,
      validateTime: A,
      getCalendarDays: I,
      getMarker: _,
      handleArrow: V,
      handleScroll: p,
      handleSwipe: Q,
      selectDate: R,
      updateMonthYear: W,
      presetDate: B,
      selectCurrentDate: T,
      updateTime: M
    } = Sr(n, a, le, E), G = Dt(), { setHoverDate: ne, getDayClassData: $, clearHoverDate: re } = Ol(b, n), { defaultedMultiCalendars: se } = Se(n), k = ee([]), L = ee([]), Y = ee(null), P = ze(G, "calendar"), te = ze(G, "monthYear"), d = ze(G, "timePicker"), c = (s) => {
      n.shadow || a("mount", s);
    };
    ct(
      i,
      () => {
        n.shadow || setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const X = j(() => (s) => I(o.value(s), v.value(s)).map((x) => ({
      ...x,
      days: x.days.map((ae) => (ae.marker = _(ae), ae.classData = $(ae), ae))
    })));
    function le(s) {
      var x;
      s || s === 0 ? (x = L.value[s]) == null || x.triggerTransition(o.value(s), v.value(s)) : L.value.forEach((ae, f) => ae.triggerTransition(o.value(f), v.value(f)));
    }
    function E() {
      a("update-flow-step");
    }
    const m = (s, x = !1) => {
      R(s, x), n.spaceConfirm && a("select-date");
    };
    return t({
      clearHoverDate: re,
      presetDate: B,
      selectCurrentDate: T,
      toggleMonthPicker: (s, x, ae = 0) => {
        var f;
        (f = k.value[ae]) == null || f.toggleMonthPicker(s, x);
      },
      toggleYearPicker: (s, x, ae = 0) => {
        var f;
        (f = k.value[ae]) == null || f.toggleYearPicker(s, x);
      },
      toggleTimePicker: (s, x, ae) => {
        var f;
        (f = Y.value) == null || f.toggleTimePicker(s, x, ae);
      },
      handleArrow: V,
      updateMonthYear: W,
      getSidebarProps: () => ({
        modelValue: b,
        month: o,
        year: v,
        time: O,
        updateTime: M,
        updateMonthYear: W,
        selectDate: R,
        presetDate: B
      })
    }), (s, x) => (D(), z(he, null, [
      He(rn, {
        "multi-calendars": u(se).count,
        collapse: s.collapse
      }, {
        default: pe(({ instance: ae, index: f }) => [
          s.disableMonthYearSelect ? q("", !0) : (D(), ke(gr, Ye({
            key: 0,
            ref: (J) => {
              J && (k.value[f] = J);
            },
            months: u(fa)(s.formatLocale, s.locale, s.monthNameFormat),
            years: u(En)(s.yearRange, s.reverseYears),
            month: u(o)(ae),
            year: u(v)(ae),
            instance: ae
          }, s.$props, {
            onMount: x[0] || (x[0] = (J) => c(u(wt).header)),
            onResetFlow: x[1] || (x[1] = (J) => s.$emit("reset-flow")),
            onUpdateMonthYear: (J) => u(W)(ae, J),
            onOverlayClosed: x[2] || (x[2] = (J) => s.$emit("focus-menu"))
          }), Le({ _: 2 }, [
            Te(u(te), (J, ye) => ({
              name: J,
              fn: pe((F) => [
                ue(s.$slots, J, _e(Fe(F)))
              ])
            }))
          ]), 1040, ["months", "years", "month", "year", "instance", "onUpdateMonthYear"])),
          He(Tr, Ye({
            ref: (J) => {
              J && (L.value[f] = J);
            },
            "mapped-dates": X.value(ae),
            month: u(o)(ae),
            year: u(v)(ae),
            instance: ae
          }, s.$props, {
            onSelectDate: (J) => u(R)(J, ae !== 1),
            onHandleSpace: (J) => m(J, ae !== 1),
            onSetHoverDate: x[3] || (x[3] = (J) => u(ne)(J)),
            onHandleScroll: (J) => u(p)(J, ae),
            onHandleSwipe: (J) => u(Q)(J, ae),
            onMount: x[4] || (x[4] = (J) => c(u(wt).calendar)),
            onResetFlow: x[5] || (x[5] = (J) => s.$emit("reset-flow")),
            onTooltipOpen: x[6] || (x[6] = (J) => s.$emit("tooltip-open", J)),
            onTooltipClose: x[7] || (x[7] = (J) => s.$emit("tooltip-close", J))
          }), Le({ _: 2 }, [
            Te(u(P), (J, ye) => ({
              name: J,
              fn: pe((F) => [
                ue(s.$slots, J, _e(Fe({ ...F })))
              ])
            }))
          ]), 1040, ["mapped-dates", "month", "year", "instance", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
        ]),
        _: 3
      }, 8, ["multi-calendars", "collapse"]),
      s.enableTimePicker ? (D(), z("div", Pr, [
        s.$slots["time-picker"] ? ue(s.$slots, "time-picker", _e(Ye({ key: 0 }, { time: u(O), updateTime: u(M) }))) : (D(), ke(Pa, Ye({
          key: 1,
          ref_key: "timePickerRef",
          ref: Y
        }, s.$props, {
          hours: u(O).hours,
          minutes: u(O).minutes,
          seconds: u(O).seconds,
          "internal-model-value": s.internalModelValue,
          "disabled-times-config": u(g),
          "validate-time": u(A),
          onMount: x[8] || (x[8] = (ae) => c(u(wt).timePicker)),
          "onUpdate:hours": x[9] || (x[9] = (ae) => u(M)(ae)),
          "onUpdate:minutes": x[10] || (x[10] = (ae) => u(M)(ae, !1)),
          "onUpdate:seconds": x[11] || (x[11] = (ae) => u(M)(ae, !1, !0)),
          onResetFlow: x[12] || (x[12] = (ae) => s.$emit("reset-flow")),
          onOverlayClosed: x[13] || (x[13] = (ae) => s.$emit("time-picker-close")),
          onOverlayOpened: x[14] || (x[14] = (ae) => s.$emit("time-picker-open", ae)),
          onAmPmChange: x[15] || (x[15] = (ae) => s.$emit("am-pm-change", ae))
        }), Le({ _: 2 }, [
          Te(u(d), (ae, f) => ({
            name: ae,
            fn: pe((J) => [
              ue(s.$slots, ae, _e(Fe(J)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"]))
      ])) : q("", !0)
    ], 64));
  }
}), Cr = (e, t) => {
  const r = ee(), { defaultedMultiCalendars: a, defaultedConfig: n, defaultedHighlight: i, defaultedRange: o, propDates: v } = Se(e), { modelValue: b, year: O, month: g, calendars: A } = zt(e, t), { isDisabled: I } = Mt(e), { selectYear: _, groupedYears: V, showYearPicker: p, isDisabled: Q, toggleYearPicker: R, handleYearSelect: W, handleYear: B } = Sa({
    modelValue: b,
    multiCalendars: a,
    highlight: i,
    calendars: A,
    propDates: v,
    month: g,
    year: O,
    props: e,
    emit: t
  }), T = (Y, P) => [Y, P].map((te) => tt(te, "MMMM", { locale: e.formatLocale })).join("-"), M = j(() => (Y) => b.value ? Array.isArray(b.value) ? b.value.some((P) => jn(Y, P)) : jn(b.value, Y) : !1), G = (Y) => {
    if (o.value.enabled) {
      if (Array.isArray(b.value)) {
        const P = be(Y, b.value[0]) || be(Y, b.value[1]);
        return nn(b.value, r.value, Y) && !P;
      }
      return !1;
    }
    return !1;
  }, ne = j(() => (Y) => {
    const P = $e(/* @__PURE__ */ new Date(), { year: O.value(Y) });
    return Ka({
      start: ja(P),
      end: Ga(P)
    }).map((te) => {
      const d = Qa(te), c = Gn(te), X = I(te), le = G(d), E = typeof i.value == "function" ? i.value({ quarter: Qn(d), year: me(d) }) : !!i.value.quarters.find(
        (m) => m.quarter === Qn(d) && m.year === me(d)
      );
      return {
        text: T(d, c),
        value: d,
        active: M.value(d),
        highlighted: E,
        disabled: X,
        isBetween: le
      };
    });
  }), $ = (Y) => {
    Vn(Y, b, e.multiDatesLimit), t("auto-apply", !0);
  }, re = (Y) => {
    const P = Hn(b, Y, t);
    on(P, t, e.autoApply, e.modelAuto);
  }, se = (Y) => {
    b.value = Y, t("auto-apply");
  };
  return {
    defaultedConfig: n,
    defaultedMultiCalendars: a,
    groupedYears: V,
    year: O,
    isDisabled: Q,
    quarters: ne,
    showYearPicker: p,
    modelValue: b,
    setHoverDate: (Y) => {
      r.value = Y;
    },
    selectYear: _,
    selectQuarter: (Y, P, te) => {
      if (!te)
        return A.value[P].month = ge(Gn(Y)), e.multiDates ? $(Y) : o.value.enabled ? re(Y) : se(Y);
    },
    toggleYearPicker: R,
    handleYearSelect: W,
    handleYear: B
  };
}, _r = { class: "dp--quarter-items" }, Or = ["disabled", "onClick", "onMouseover"], Br = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "QuarterPicker",
  props: {
    ...Je
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "overlay-closed",
    "auto-apply",
    "range-start",
    "range-end"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, i = Dt(), o = ze(i, "yearMode"), {
      defaultedMultiCalendars: v,
      defaultedConfig: b,
      groupedYears: O,
      year: g,
      isDisabled: A,
      quarters: I,
      modelValue: _,
      showYearPicker: V,
      setHoverDate: p,
      selectQuarter: Q,
      toggleYearPicker: R,
      handleYearSelect: W,
      handleYear: B
    } = Cr(n, a);
    return t({ getSidebarProps: () => ({
      modelValue: _,
      year: g,
      selectQuarter: Q,
      handleYearSelect: W,
      handleYear: B
    }) }), (M, G) => (D(), ke(rn, {
      "multi-calendars": u(v).count,
      collapse: M.collapse,
      stretch: ""
    }, {
      default: pe(({ instance: ne }) => [
        ce("div", {
          class: "dp-quarter-picker-wrap",
          style: qe({ minHeight: `${u(b).modeHeight}px` })
        }, [
          ce("div", null, [
            He($a, Ye(M.$props, {
              items: u(O)(ne),
              instance: ne,
              "show-year-picker": u(V)[ne],
              year: u(g)(ne),
              "is-disabled": ($) => u(A)(ne, $),
              onHandleYear: ($) => u(B)(ne, $),
              onYearSelect: ($) => u(W)($, ne),
              onToggleYearPicker: ($) => u(R)(ne, $ == null ? void 0 : $.flow, $ == null ? void 0 : $.show)
            }), Le({ _: 2 }, [
              Te(u(o), ($, re) => ({
                name: $,
                fn: pe((se) => [
                  ue(M.$slots, $, _e(Fe(se)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          ce("div", _r, [
            (D(!0), z(he, null, Te(u(I)(ne), ($, re) => (D(), z("div", { key: re }, [
              ce("button", {
                type: "button",
                class: we(["dp--qr-btn", {
                  "dp--qr-btn-active": $.active,
                  "dp--qr-btn-between": $.isBetween,
                  "dp--qr-btn-disabled": $.disabled,
                  "dp--highlighted": $.highlighted
                }]),
                disabled: $.disabled,
                onClick: (se) => u(Q)($.value, ne, $.disabled),
                onMouseover: (se) => u(p)($.value)
              }, [
                M.$slots.quarter ? ue(M.$slots, "quarter", {
                  key: 0,
                  value: $.value,
                  text: $.text
                }) : (D(), z(he, { key: 1 }, [
                  ot(Ne($.text), 1)
                ], 64))
              ], 42, Or)
            ]))), 128))
          ])
        ], 4)
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), Yr = ["id"], Ir = {
  key: 0,
  class: "dp--menu-load-container"
}, Nr = /* @__PURE__ */ ce("span", { class: "dp--menu-loader" }, null, -1), Er = [
  Nr
], Fr = {
  key: 0,
  class: "dp__sidebar_left"
}, Lr = ["onClick", "onKeydown"], Wr = {
  key: 2,
  class: "dp__sidebar_right"
}, Vr = {
  key: 3,
  class: "dp__action_extra"
}, aa = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerMenu",
  props: {
    ...ln,
    shadow: { type: Boolean, default: !1 },
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    noOverlayFocus: { type: Boolean, default: !1 },
    collapse: { type: Boolean, default: !1 }
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, i = ee(null), o = j(() => {
      const { openOnTop: S, ...U } = n;
      return {
        ...U,
        flowStep: $.value,
        collapse: n.collapse,
        noOverlayFocus: n.noOverlayFocus,
        menuWrapRef: i.value
      };
    }), { setMenuFocused: v, setShiftKey: b, control: O } = Da(), g = Dt(), { defaultedTextInput: A, defaultedInline: I, defaultedConfig: _ } = Se(n), V = ee(null), p = ee(0), Q = ee(null), R = ee(!1), W = ee(null);
    We(() => {
      if (!n.shadow) {
        R.value = !0, B(), window.addEventListener("resize", B);
        const S = Oe(i);
        if (S && !A.value.enabled && !I.value.enabled && (v(!0), Y()), S) {
          const U = (fe) => {
            _.value.allowPreventDefault && fe.preventDefault(), it(fe, _.value, !0);
          };
          S.addEventListener("pointerdown", U), S.addEventListener("mousedown", U);
        }
      }
    }), tn(() => {
      window.removeEventListener("resize", B);
    });
    const B = () => {
      const S = Oe(Q);
      S && (p.value = S.getBoundingClientRect().width);
    }, { arrowRight: T, arrowLeft: M, arrowDown: G, arrowUp: ne } = mt(), { flowStep: $, updateFlowStep: re, childMount: se, resetFlow: k } = Bl(n, a, W), L = j(() => n.monthPicker ? ql : n.yearPicker ? Jl : n.timePicker ? mr : n.quarterPicker ? Br : Rr), Y = () => {
      const S = Oe(i);
      S && S.focus({ preventScroll: !0 });
    }, P = j(() => {
      var S;
      return ((S = W.value) == null ? void 0 : S.getSidebarProps()) || {};
    }), te = () => {
      n.openOnTop && a("recalculate-position");
    }, d = ze(g, "action"), c = j(() => n.monthPicker || n.yearPicker ? ze(g, "monthYear") : n.timePicker ? ze(g, "timePicker") : ze(g, "shared")), X = j(() => n.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), le = j(() => ({
      dp__menu_disabled: n.disabled,
      dp__menu_readonly: n.readonly,
      "dp-menu-loading": n.loading
    })), E = j(
      () => ({
        dp__menu: !0,
        dp__menu_index: !I.value.enabled,
        dp__relative: I.value.enabled,
        [n.menuClassName]: !!n.menuClassName
      })
    ), m = (S) => {
      it(S, _.value, !0);
    }, h = () => {
      n.escClose && a("close-picker");
    }, l = (S) => {
      if (n.arrowNavigation) {
        if (S === "up")
          return ne();
        if (S === "down")
          return G();
        if (S === "left")
          return M();
        if (S === "right")
          return T();
      } else
        S === "left" || S === "up" ? ae("handleArrow", "left", 0, S === "up") : ae("handleArrow", "right", 0, S === "down");
    }, w = (S) => {
      b(S.shiftKey), !n.disableMonthYearSelect && S.code === "Tab" && S.target.classList.contains("dp__menu") && O.value.shiftKeyInMenu && (S.preventDefault(), it(S, _.value, !0), a("close-picker"));
    }, H = () => {
      Y(), a("time-picker-close");
    }, s = (S) => {
      var U, fe, De;
      (U = W.value) == null || U.toggleTimePicker(!1, !1), (fe = W.value) == null || fe.toggleMonthPicker(!1, !1, S), (De = W.value) == null || De.toggleYearPicker(!1, !1, S);
    }, x = (S, U = 0) => {
      var fe, De, K;
      return S === "month" ? (fe = W.value) == null ? void 0 : fe.toggleMonthPicker(!1, !0, U) : S === "year" ? (De = W.value) == null ? void 0 : De.toggleYearPicker(!1, !0, U) : S === "time" ? (K = W.value) == null ? void 0 : K.toggleTimePicker(!0, !1) : s(U);
    }, ae = (S, ...U) => {
      var fe, De;
      (fe = W.value) != null && fe[S] && ((De = W.value) == null || De[S](...U));
    }, f = () => {
      ae("selectCurrentDate");
    }, J = (S, U) => {
      ae("presetDate", S, U);
    }, ye = () => {
      ae("clearHoverDate");
    };
    return t({
      updateMonthYear: (S, U) => {
        ae("updateMonthYear", S, U);
      },
      switchView: x
    }), (S, U) => {
      var fe, De;
      return D(), z("div", {
        id: S.uid ? `dp-menu-${S.uid}` : void 0,
        ref_key: "dpMenuRef",
        ref: i,
        tabindex: "0",
        role: "dialog",
        class: we(E.value),
        onMouseleave: ye,
        onClick: m,
        onKeydown: [
          ve(h, ["esc"]),
          U[18] || (U[18] = ve(Me((K) => l("left"), ["prevent"]), ["left"])),
          U[19] || (U[19] = ve(Me((K) => l("up"), ["prevent"]), ["up"])),
          U[20] || (U[20] = ve(Me((K) => l("down"), ["prevent"]), ["down"])),
          U[21] || (U[21] = ve(Me((K) => l("right"), ["prevent"]), ["right"])),
          w
        ]
      }, [
        (S.disabled || S.readonly) && u(I).enabled || S.loading ? (D(), z("div", {
          key: 0,
          class: we(le.value)
        }, [
          S.loading ? (D(), z("div", Ir, Er)) : q("", !0)
        ], 2)) : q("", !0),
        !u(I).enabled && !S.teleportCenter ? (D(), z("div", {
          key: 1,
          class: we(X.value)
        }, null, 2)) : q("", !0),
        ce("div", {
          ref_key: "innerMenuRef",
          ref: Q,
          class: we({
            dp__menu_content_wrapper: ((fe = S.presetDates) == null ? void 0 : fe.length) || !!S.$slots["left-sidebar"] || !!S.$slots["right-sidebar"],
            "dp--menu-content-wrapper-collapsed": e.collapse && ((De = S.presetDates) == null ? void 0 : De.length) || !!S.$slots["left-sidebar"] || !!S.$slots["right-sidebar"]
          }),
          style: qe({ "--dp-menu-width": `${p.value}px` })
        }, [
          S.$slots["left-sidebar"] ? (D(), z("div", Fr, [
            ue(S.$slots, "left-sidebar", _e(Fe(P.value)))
          ])) : q("", !0),
          S.presetDates.length ? (D(), z("div", {
            key: 1,
            class: we({ "dp--preset-dates-collapsed": e.collapse, "dp--preset-dates": !0 })
          }, [
            (D(!0), z(he, null, Te(S.presetDates, (K, je) => (D(), z(he, { key: je }, [
              K.slot ? ue(S.$slots, K.slot, {
                key: 0,
                presetDate: J,
                label: K.label,
                value: K.value
              }) : (D(), z("button", {
                key: 1,
                type: "button",
                style: qe(K.style || {}),
                class: we(["dp__btn dp--preset-range", { "dp--preset-range-collapsed": e.collapse }]),
                onClick: Me((Ve) => J(K.value, K.noTz), ["prevent"]),
                onKeydown: [
                  ve(Me((Ve) => J(K.value, K.noTz), ["prevent"]), ["enter"]),
                  ve(Me((Ve) => J(K.value, K.noTz), ["prevent"]), ["space"])
                ]
              }, Ne(K.label), 47, Lr))
            ], 64))), 128))
          ], 2)) : q("", !0),
          ce("div", {
            ref_key: "calendarWrapperRef",
            ref: V,
            class: "dp__instance_calendar",
            role: "document"
          }, [
            (D(), ke(Rn(L.value), Ye({
              ref_key: "dynCmpRef",
              ref: W
            }, o.value, {
              "flow-step": u($),
              onMount: u(se),
              onUpdateFlowStep: u(re),
              onResetFlow: u(k),
              onFocusMenu: Y,
              onSelectDate: U[0] || (U[0] = (K) => S.$emit("select-date")),
              onDateUpdate: U[1] || (U[1] = (K) => S.$emit("date-update", K)),
              onTooltipOpen: U[2] || (U[2] = (K) => S.$emit("tooltip-open", K)),
              onTooltipClose: U[3] || (U[3] = (K) => S.$emit("tooltip-close", K)),
              onAutoApply: U[4] || (U[4] = (K) => S.$emit("auto-apply", K)),
              onRangeStart: U[5] || (U[5] = (K) => S.$emit("range-start", K)),
              onRangeEnd: U[6] || (U[6] = (K) => S.$emit("range-end", K)),
              onInvalidFixedRange: U[7] || (U[7] = (K) => S.$emit("invalid-fixed-range", K)),
              onTimeUpdate: U[8] || (U[8] = (K) => S.$emit("time-update")),
              onAmPmChange: U[9] || (U[9] = (K) => S.$emit("am-pm-change", K)),
              onTimePickerOpen: U[10] || (U[10] = (K) => S.$emit("time-picker-open", K)),
              onTimePickerClose: H,
              onRecalculatePosition: te,
              onUpdateMonthYear: U[11] || (U[11] = (K) => S.$emit("update-month-year", K)),
              onAutoApplyInvalid: U[12] || (U[12] = (K) => S.$emit("auto-apply-invalid", K)),
              onInvalidDate: U[13] || (U[13] = (K) => S.$emit("invalid-date", K)),
              "onUpdate:internalModelValue": U[14] || (U[14] = (K) => S.$emit("update:internal-model-value", K))
            }), Le({ _: 2 }, [
              Te(c.value, (K, je) => ({
                name: K,
                fn: pe((Ve) => [
                  ue(S.$slots, K, _e(Fe({ ...Ve })))
                ])
              }))
            ]), 1040, ["flow-step", "onMount", "onUpdateFlowStep", "onResetFlow"]))
          ], 512),
          S.$slots["right-sidebar"] ? (D(), z("div", Wr, [
            ue(S.$slots, "right-sidebar", _e(Fe(P.value)))
          ])) : q("", !0),
          S.$slots["action-extra"] ? (D(), z("div", Vr, [
            S.$slots["action-extra"] ? ue(S.$slots, "action-extra", {
              key: 0,
              selectCurrentDate: f
            }) : q("", !0)
          ])) : q("", !0)
        ], 6),
        !S.autoApply || u(_).keepActionRow ? (D(), ke(Wl, Ye({
          key: 2,
          "menu-mount": R.value
        }, o.value, {
          "calendar-width": p.value,
          onClosePicker: U[15] || (U[15] = (K) => S.$emit("close-picker")),
          onSelectDate: U[16] || (U[16] = (K) => S.$emit("select-date")),
          onInvalidSelect: U[17] || (U[17] = (K) => S.$emit("invalid-select")),
          onSelectNow: f
        }), Le({ _: 2 }, [
          Te(u(d), (K, je) => ({
            name: K,
            fn: pe((Ve) => [
              ue(S.$slots, K, _e(Fe({ ...Ve })))
            ])
          }))
        ]), 1040, ["menu-mount", "calendar-width"])) : q("", !0)
      ], 42, Yr);
    };
  }
}), Hr = typeof window < "u" ? window : void 0, An = () => {
}, zr = (e) => Ya() ? (Ia(e), !0) : !1, Ur = (e, t, r, a) => {
  if (!e)
    return An;
  let n = An;
  const i = ct(
    () => u(e),
    (v) => {
      n(), v && (v.addEventListener(t, r, a), n = () => {
        v.removeEventListener(t, r, a), n = An;
      });
    },
    { immediate: !0, flush: "post" }
  ), o = () => {
    i(), n();
  };
  return zr(o), o;
}, Kr = (e, t, r, a = {}) => {
  const { window: n = Hr, event: i = "pointerdown" } = a;
  return n ? Ur(n, i, (v) => {
    const b = Oe(e), O = Oe(t);
    !b || !O || b === v.target || v.composedPath().includes(b) || v.composedPath().includes(O) || r(v);
  }, { passive: !0 }) : void 0;
}, jr = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "VueDatePicker",
  props: {
    ...ln
  },
  emits: [
    "update:model-value",
    "update:model-timezone-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, i = Dt(), o = ee(!1), v = xt(n, "modelValue"), b = xt(n, "timezone"), O = ee(null), g = ee(null), A = ee(null), I = ee(!1), _ = ee(null), V = ee(!1), p = ee(!1), Q = ee(!1), { setMenuFocused: R, setShiftKey: W } = Da(), { clearArrowNav: B } = mt(), { validateDate: T, isValidTime: M } = Mt(n), { defaultedTransitions: G, defaultedTextInput: ne, defaultedInline: $, defaultedConfig: re, defaultedRange: se } = Se(n), { menuTransition: k, showTransition: L } = Ht(G);
    We(() => {
      l(n.modelValue), ft().then(() => {
        if (!$.value.enabled) {
          const C = le(_.value);
          C == null || C.addEventListener("scroll", F), window == null || window.addEventListener("resize", S);
        }
      }), $.value.enabled && (o.value = !0), window == null || window.addEventListener("keyup", U), window == null || window.addEventListener("keydown", fe);
    }), tn(() => {
      if (!$.value.enabled) {
        const C = le(_.value);
        C == null || C.removeEventListener("scroll", F), window == null || window.removeEventListener("resize", S);
      }
      window == null || window.removeEventListener("keyup", U), window == null || window.removeEventListener("keydown", fe);
    });
    const Y = ze(i, "all", n.presetDates), P = ze(i, "input");
    ct(
      [v, b],
      () => {
        l(v.value);
      },
      { deep: !0 }
    );
    const { openOnTop: te, menuStyle: d, xCorrect: c, setMenuPosition: X, getScrollableParent: le, shadowRender: E } = Rl({
      menuRef: O,
      menuRefInner: g,
      inputRef: A,
      pickerWrapperRef: _,
      inline: $,
      emit: a,
      props: n,
      slots: i
    }), {
      inputValue: m,
      internalModelValue: h,
      parseExternalModelValue: l,
      emitModelValue: w,
      formatInputValue: H,
      checkBeforeEmit: s
    } = Sl(a, n, I), x = j(
      () => ({
        dp__main: !0,
        dp__theme_dark: n.dark,
        dp__theme_light: !n.dark,
        dp__flex_display: $.value.enabled,
        "dp--flex-display-collapsed": Q.value,
        dp__flex_display_with_input: $.value.input
      })
    ), ae = j(() => n.dark ? "dp__theme_dark" : "dp__theme_light"), f = j(() => ({
      to: typeof n.teleport == "boolean" ? "body" : n.teleport,
      disabled: !n.teleport || $.value.enabled
    })), J = j(() => ({ class: "dp__outer_menu_wrap" })), ye = j(() => $.value.enabled && (n.timePicker || n.monthPicker || n.yearPicker || n.quarterPicker)), F = () => {
      o.value && (re.value.closeOnScroll ? Ke() : X());
    }, S = () => {
      var oe;
      o.value && X();
      const C = (oe = g.value) == null ? void 0 : oe.$el.getBoundingClientRect().width;
      Q.value = document.body.offsetWidth <= C;
    }, U = (C) => {
      C.key === "Tab" && !$.value.enabled && !n.teleport && re.value.tabOutClosesMenu && (_.value.contains(document.activeElement) || Ke()), p.value = C.shiftKey;
    }, fe = (C) => {
      p.value = C.shiftKey;
    }, De = () => {
      !n.disabled && !n.readonly && (E(aa, n), X(!1), o.value = !0, o.value && a("open"), o.value || Yt(), l(n.modelValue));
    }, K = () => {
      var C;
      m.value = "", Yt(), (C = A.value) == null || C.setParsedDate(null), a("update:model-value", null), a("update:model-timezone-value", null), a("cleared"), re.value.closeOnClearValue && Ke();
    }, je = () => {
      const C = h.value;
      return !C || !Array.isArray(C) && T(C) ? !0 : Array.isArray(C) ? n.multiDates || C.length === 2 && T(C[0]) && T(C[1]) ? !0 : se.value.partialRange && !n.timePicker ? T(C[0]) : !1 : !1;
    }, Ve = () => {
      s() && je() ? (w(), Ke()) : a("invalid-select", h.value);
    }, Kt = (C) => {
      Ot(), w(), re.value.closeOnAutoApply && !C && Ke();
    }, Ot = () => {
      A.value && ne.value.enabled && A.value.setParsedDate(h.value);
    }, Bt = (C = !1) => {
      n.autoApply && M(h.value) && je() && (se.value.enabled && Array.isArray(h.value) ? (se.value.partialRange || h.value.length === 2) && Kt(C) : Kt(C));
    }, Yt = () => {
      ne.value.enabled || (h.value = null);
    }, Ke = () => {
      $.value.enabled || (o.value && (o.value = !1, c.value = !1, R(!1), W(!1), B(), a("closed"), m.value && l(v.value)), Yt(), a("blur"));
    }, sn = (C, oe, de = !1) => {
      if (!C) {
        h.value = null;
        return;
      }
      const at = Array.isArray(C) ? !C.some((pt) => !T(pt)) : T(C), Ze = M(C);
      at && Ze && (h.value = C, oe && (V.value = de, Ve(), a("text-submit")));
    }, un = () => {
      n.autoApply && M(h.value) && w(), Ot();
    }, jt = () => o.value ? Ke() : De(), dn = (C) => {
      h.value = C;
    }, cn = () => {
      ne.value.enabled && (I.value = !0, H()), a("focus");
    }, fn = () => {
      if (ne.value.enabled && (I.value = !1, l(n.modelValue), V.value)) {
        const C = tl(_.value, p.value);
        C == null || C.focus();
      }
      a("blur");
    }, zn = (C) => {
      g.value && g.value.updateMonthYear(0, {
        month: Xn(C.month),
        year: Xn(C.year)
      });
    }, y = (C) => {
      l(C ?? n.modelValue);
    }, Z = (C, oe) => {
      var de;
      (de = g.value) == null || de.switchView(C, oe);
    }, ie = (C) => re.value.onClickOutside ? re.value.onClickOutside(C) : Ke();
    return Kr(O, A, () => ie(je)), t({
      closeMenu: Ke,
      selectDate: Ve,
      clearValue: K,
      openMenu: De,
      onScroll: F,
      formatInputValue: H,
      // exposed for testing purposes
      updateInternalModelValue: dn,
      // modify internal modelValue
      setMonthYear: zn,
      parseModel: y,
      switchView: Z,
      toggleMenu: jt
    }), (C, oe) => (D(), z("div", {
      ref_key: "pickerWrapperRef",
      ref: _,
      class: we(x.value),
      "data-datepicker-instance": ""
    }, [
      He(El, Ye({
        ref_key: "inputRef",
        ref: A,
        "input-value": u(m),
        "onUpdate:inputValue": oe[0] || (oe[0] = (de) => Kn(m) ? m.value = de : null),
        "is-menu-open": o.value
      }, C.$props, {
        onClear: K,
        onOpen: De,
        onSetInputDate: sn,
        onSetEmptyDate: u(w),
        onSelectDate: Ve,
        onToggle: jt,
        onClose: Ke,
        onFocus: cn,
        onBlur: fn,
        onRealBlur: oe[1] || (oe[1] = (de) => I.value = !1)
      }), Le({ _: 2 }, [
        Te(u(P), (de, at) => ({
          name: de,
          fn: pe((Ze) => [
            ue(C.$slots, de, _e(Fe(Ze)))
          ])
        }))
      ]), 1040, ["input-value", "is-menu-open", "onSetEmptyDate"]),
      He(Na, _e(Fe(f.value)), {
        default: pe(() => [
          He(Ct, {
            name: u(k)(u(te)),
            css: u(L) && !u($).enabled
          }, {
            default: pe(() => [
              o.value ? (D(), z("div", Ye({
                key: 0,
                ref_key: "dpWrapMenuRef",
                ref: O
              }, J.value, {
                class: { "dp--menu-wrapper": !u($).enabled },
                style: u($).enabled ? void 0 : u(d)
              }), [
                He(aa, Ye({
                  ref_key: "dpMenuRef",
                  ref: g
                }, C.$props, {
                  "internal-model-value": u(h),
                  "onUpdate:internalModelValue": oe[2] || (oe[2] = (de) => Kn(h) ? h.value = de : null),
                  class: { [ae.value]: !0, "dp--menu-wrapper": C.teleport },
                  "open-on-top": u(te),
                  "no-overlay-focus": ye.value,
                  collapse: Q.value,
                  onClosePicker: Ke,
                  onSelectDate: Ve,
                  onAutoApply: Bt,
                  onTimeUpdate: un,
                  onFlowStep: oe[3] || (oe[3] = (de) => C.$emit("flow-step", de)),
                  onUpdateMonthYear: oe[4] || (oe[4] = (de) => C.$emit("update-month-year", de)),
                  onInvalidSelect: oe[5] || (oe[5] = (de) => C.$emit("invalid-select", u(h))),
                  onAutoApplyInvalid: oe[6] || (oe[6] = (de) => C.$emit("invalid-select", de)),
                  onInvalidFixedRange: oe[7] || (oe[7] = (de) => C.$emit("invalid-fixed-range", de)),
                  onRecalculatePosition: u(X),
                  onTooltipOpen: oe[8] || (oe[8] = (de) => C.$emit("tooltip-open", de)),
                  onTooltipClose: oe[9] || (oe[9] = (de) => C.$emit("tooltip-close", de)),
                  onTimePickerOpen: oe[10] || (oe[10] = (de) => C.$emit("time-picker-open", de)),
                  onTimePickerClose: oe[11] || (oe[11] = (de) => C.$emit("time-picker-close", de)),
                  onAmPmChange: oe[12] || (oe[12] = (de) => C.$emit("am-pm-change", de)),
                  onRangeStart: oe[13] || (oe[13] = (de) => C.$emit("range-start", de)),
                  onRangeEnd: oe[14] || (oe[14] = (de) => C.$emit("range-end", de)),
                  onDateUpdate: oe[15] || (oe[15] = (de) => C.$emit("date-update", de)),
                  onInvalidDate: oe[16] || (oe[16] = (de) => C.$emit("invalid-date", de))
                }), Le({ _: 2 }, [
                  Te(u(Y), (de, at) => ({
                    name: de,
                    fn: pe((Ze) => [
                      ue(C.$slots, de, _e(Fe({ ...Ze })))
                    ])
                  }))
                ]), 1040, ["internal-model-value", "class", "open-on-top", "no-overlay-focus", "collapse", "onRecalculatePosition"])
              ], 16)) : q("", !0)
            ]),
            _: 3
          }, 8, ["name", "css"])
        ]),
        _: 3
      }, 16)
    ], 2));
  }
}), Ca = /* @__PURE__ */ (() => {
  const e = jr;
  return e.install = (t) => {
    t.component("Vue3DatePicker", e);
  }, e;
})(), Gr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ca
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(Gr).forEach(([e, t]) => {
  e !== "default" && (Ca[e] = t);
});
export {
  Ca as default
};
